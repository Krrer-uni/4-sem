{"version": 2, "width": 203, "height": 53, "timestamp": 1648486289, "env": {"SHELL": "/bin/bash", "TERM": "xterm-256color"}}
[0.135892, "o", "\u001b]0;krrer@krrer-Z590-D: ~/4-sem/aisd/261742/lista_2\u0007\u001b[01;32mkrrer@krrer-Z590-D\u001b[00m:\u001b[01;34m~/4-sem/aisd/261742/lista_2\u001b[00m$ "]
[1.789641, "o", "c"]
[1.85751, "o", "a"]
[2.005643, "o", "t"]
[2.157687, "o", " "]
[2.505634, "o", "p"]
[2.561474, "o", "r"]
[2.629675, "o", "e"]
[2.773701, "o", "s"]
[2.857554, "o", "e"]
[3.133652, "o", "ntation.sh "]
[3.781682, "o", "\r\n"]
[3.784374, "o", "#!/bin/bash\r\n\r\ncat presentation.sh\r\n\r\nfor alg in merge quick insert dpquick hybrid\r\ndo\r\n    g++ ${alg}.cpp -o $alg\r\n    cat ${alg}.cpp\r\n    for alg2 in randgen descgen ascgen\r\n    do\r\n        for N in 8 16 32\r\n        do\r\n            echo \" ./$alg2 $N | ./$alg \"\r\n            ./$alg2 $N | ./$alg\r\n            echo\r\n        done\r\n    done\r\ndone\r\n\r\n"]
[3.784963, "o", "\u001b]0;krrer@krrer-Z590-D: ~/4-sem/aisd/261742/lista_2\u0007\u001b[01;32mkrrer@krrer-Z590-D\u001b[00m:\u001b[01;34m~/4-sem/aisd/261742/lista_2\u001b[00m$ "]
[6.697544, "o", "."]
[6.713555, "o", "/"]
[7.31754, "o", "p"]
[7.397628, "o", "r"]
[7.493624, "o", "e"]
[7.625543, "o", "s"]
[7.785498, "o", "e"]
[8.189705, "o", "n"]
[8.289632, "o", "t"]
[8.389698, "o", "a"]
[8.513588, "o", "t"]
[8.641612, "o", "i"]
[8.693532, "o", "o"]
[8.789549, "o", "n"]
[9.653671, "o", "."]
[9.761647, "o", "s"]
[9.965626, "o", "h"]
[10.194045, "o", " "]
[11.869646, "o", "\r\n"]
[11.87549, "o", "#!/bin/bash\r\n\r\ncat presentation.sh\r\n\r\nfor alg in merge quick insert dpquick hybrid\r\ndo\r\n    g++ ${alg}.cpp -o $alg\r\n    cat ${alg}.cpp\r\n    for alg2 in randgen descgen ascgen\r\n    do\r\n        for N in 8 16 32\r\n        do\r\n            echo \" ./$alg2 $N | ./$alg \"\r\n            ./$alg2 $N | ./$alg\r\n            echo\r\n        done\r\n    done\r\ndone\r\n\r\n"]
[12.058113, "o", "#include <iostream>\r\n#include <sstream>\r\n#include <queue>\r\nusing namespace std;\r\n\r\nint SWAP = 0;\r\nint COMP = 0;\r\nint n;\r\n\r\nvoid swap(int* arr, int a, int b){\r\n    int tmp  = arr[a];\r\n    arr[a] = arr[b];\r\n    arr[b] = tmp;\r\n    SWAP++;\r\n}\r\n\r\nint ls(int a, int b){\r\n    COMP++;\r\n    return a < b;\r\n}\r\n\r\nvoid merge(int* arr, int  b, int m, int e){\r\n    int i = b;\r\n    int j = m+1;\r\n    int k = 0;\r\n    int arr_out[e-b+1];\r\n    while(i <= m  && j <= e){\r\n        if(ls(arr[i] , arr[j])){\r\n            arr_out[k] = arr[i];\r\n            \r\n            i++;\r\n        } else{\r\n            arr_out[k] = arr[j];\r\n            j++;\r\n        }\r\n        k++;\r\n        SWAP++;\r\n    }\r\n    while(i <= m){\r\n        arr_out[k++] = arr[i++];\r\n        SWAP++;\r\n    }\r\n    while(j <= e){\r\n        arr_out[k++] = arr[j++];\r\n        SWAP++;\r\n    }\r\n    for(int p = 0; p <= e-b; p++ ){\r\n        arr[p+b] = arr_out[p];\r\n        SWAP++;\r\n    }\r\n    if(n < 50){\r\n        for(int i = 0; i < n; i++){\r\n            cout << arr[i] << \" \";\r\n        }\r\n   "]
[12.058147, "o", "     cout << \"\\n\";\r\n    }\r\n}\r\n\r\nvoid merge_sort(int arr[], int b, int e){\r\n    if(b==e) return;\r\n    else{\r\n        int m = b + (e-b)/2;\r\n        merge_sort(arr, b, m );\r\n        merge_sort(arr, m +1, e);\r\n        merge(arr,b, m, e );\r\n    }\r\n}\r\n\r\nint main(int argc, char** argv){\r\n\r\n    cin >> n;\r\n    int arr[n];\r\n\r\n    for(int i = 0; i < n; i++){\r\n        cin >> arr[i];\r\n        if(n<50) cout << arr[i] << \" \";\r\n    }\r\n    if(n<50) cout << \"\\n\";\r\n    \r\n    // int test[6] = { 6, 5, 4, 3, 2, 1};\r\n    merge_sort(arr,0,n-1);\r\n\r\n\r\n    for(int i = 0; i < n-1; i++){\r\n        if(arr[i]> arr[i+1]){\r\n            cout << \"SORTING ERROR\\n\";\r\n            return -1; \r\n        }\r\n    }\r\n\r\n\r\n    if(n < 50){\r\n        for(int i = 0; i < n; i++){\r\n            cout << arr[i] << \" \";\r\n        }\r\n        cout << \"\\n\";\r\n    }\r\n    cout  << COMP << \";\" << SWAP << \"\\n\";\r\n} ./randgen 8 | ./merge \r\n"]
[12.059051, "o", "2 4 8 11 12 5 6 7 \r\n2 4 8 11 12 5 6 7 \r\n2 4 8 11 12 5 6 7 \r\n2 4 8 11 12 5 6 7 \r\n2 4 8 11 5 12 6 7 \r\n2 4 8 11 5 12 6 7 \r\n2 4 8 11 5 6 7 12 \r\n2 4 5 6 7 8 11 12 \r\n2 4 5 6 7 8 11 12 \r\n16;48\r\n"]
[12.059155, "o", "\r\n"]
[12.059258, "o", " ./randgen 16 | ./merge \r\n"]
[12.059951, "o", "17 7 14 22 27 15 11 5 2 28 1 28 16 19 4 14 \r\n7 17 14 22 27 15 11 5 2 28 1 28 16 19 4 14 \r\n7 17 14 22 27 15 11 5 2 28 1 28 16 19 4 14 \r\n7 14 17 22 27 15 11 5 2 28 1 28 16 19 4 14 \r\n7 14 17 22 15 27 11 5 2 28 1 28 16 19 4 14 \r\n7 14 17 22 15 27 5 11 2 28 1 28 16 19 4 14 \r\n7 14 17 22 5 11 15 27 2 28 1 28 16 19 4 14 \r\n5 7 11 14 15 17 22 27 2 28 1 28 16 19 4 14 \r\n5 7 11 14 15 17 22 27 2 28 1 28 16 19 4 14 \r\n5 7 11 14 15 17 22 27 2 28 1 28 16 19 4 14 \r\n5 7 11 14 15 17 22 27 1 2 28 28 16 19 4 14 \r\n5 7 11 14 15 17 22 27 1 2 28 28 16 19 4 14 \r\n5 7 11 14 15 17 22 27 1 2 28 28 16 19 4 14 \r\n5 7 11 14 15 17 22 27 1 2 28 28 4 14 16 19 \r\n5 7 11 14 15 17 22 27 1 2 4 14 16 19 28 28 \r\n1 2 4 5 7 11 14 14 15 16 17 19 22 27 28 28 \r\n1 2 4 5 7 11 14 14 15 16 17 19 22 27 28 28 \r\n45;128\r\n"]
[12.060032, "o", "\r\n"]
[12.060039, "o", " ./randgen 32 | ./merge \r\n"]
[12.060846, "o", "45 57 6 5 14 17 28 7 4 3 20 44 50 34 63 30 44 49 45 28 30 3 24 36 14 37 30 6 44 21 15 54 \r\n45 57 6 5 14 17 28 7 4 3 20 44 50 34 63 30 44 49 45 28 30 3 24 36 14 37 30 6 44 21 15 54 \r\n45 57 5 6 14 17 28 7 4 3 20 44 50 34 63 30 44 49 45 28 30 3 24 36 14 37 30 6 44 21 15 54 \r\n5 6 45 57 14 17 28 7 4 3 20 44 50 34 63 30 44 49 45 28 30 3 24 36 14 37 30 6 44 21 15 54 \r\n5 6 45 57 14 17 28 7 4 3 20 44 50 34 63 30 44 49 45 28 30 3 24 36 14 37 30 6 44 21 15 54 \r\n5 6 45 57 14 17 7 28 4 3 20 44 50 34 63 30 44 49 45 28 30 3 24 36 14 37 30 6 44 21 15 54 \r\n5 6 45 57 7 14 17 28 4 3 20 44 50 34 63 30 44 49 45 28 30 3 24 36 14 37 30 6 44 21 15 54 \r\n5 6 7 14 17 28 45 57 4 3 20 44 50 34 63 30 44 49 45 28 30 3 24 36 14 37 30 6 44 21 15 54 \r\n5 6 7 14 17 28 45 57 3 4 20 44 50 34 63 30 44 49 45 28 30 3 24 36 14 37 30 6 44 21 15 54 \r\n5 6 7 14 17 28 45 57 3 4 20 44 50 34 63 30 44 49 45 28 30 3 24 36 14 37 30 6 44 21 15 54 \r\n5 6 7 14 17 28 45 57 3 4 20 44 50 34 63 30 44 49 45 28 30 3 24 36 14 37 30 6 44 21 15 54 \r\n"]
[12.06094, "o", "5 6 7 14 17 28 45 57 3 4 20 44 34 50 63 30 44 49 45 28 30 3 24 36 14 37 30 6 44 21 15 54 \r\n5 6 7 14 17 28 45 57 3 4 20 44 34 50 30 63 44 49 45 28 30 3 24 36 14 37 30 6 44 21 15 54 \r\n5 6 7 14 17 28 45 57 3 4 20 44 30 34 50 63 44 49 45 28 30 3 24 36 14 37 30 6 44 21 15 54 \r\n5 6 7 14 17 28 45 57 3 4 20 30 34 44 50 63 44 49 45 28 30 3 24 36 14 37 30 6 44 21 15 54 \r\n3 4 5 6 7 14 17 20 28 30 34 44 45 50 57 63 44 49 45 28 30 3 24 36 14 37 30 6 44 21 15 54 \r\n3 4 5 6 7 14 17 20 28 30 34 44 45 50 57 63 44 49 45 28 30 3 24 36 14 37 30 6 44 21 15 54 \r\n3 4 5 6 7 14 17 20 28 30 34 44 45 50 57 63 44 49 28 45 30 3 24 36 14 37 30 6 44 21 15 54 \r\n3 4 5 6 7 14 17 20 28 30 34 44 45 50 57 63 28 44 45 49 30 3 24 36 14 37 30 6 44 21 15 54 \r\n3 4 5 6 7 14 17 20 28 30 34 44 45 50 57 63 28 44 45 49 3 30 24 36 14 37 30 6 44 21 15 54 \r\n3 4 5 6 7 14 17 20 28 30 34 44 45 50 57 63 28 44 45 49 3 30 24 36 14 37 30 6 44 21 15 54 \r\n3 4 5 6 7 14 17 20 28 30 34 44 45 50 57 63 28 44 45 49 3 24 30 36 14 37 30 6 44 21 15 54 \r\n3 4 5 6 7 14 17 20 28 3"]
[12.060975, "o", "0 34 44 45 50 57 63 3 24 28 30 36 44 45 49 14 37 30 6 44 21 15 54 \r\n3 4 5 6 7 14 17 20 28 30 34 44 45 50 57 63 3 24 28 30 36 44 45 49 14 37 30 6 44 21 15 54 \r\n3 4 5 6 7 14 17 20 28 30 34 44 45 50 57 63 3 24 28 30 36 44 45 49 14 37 6 30 44 21 15 54 \r\n3 4 5 6 7 14 17 20 28 30 34 44 45 50 57 63 3 24 28 30 36 44 45 49 6 14 30 37 44 21 15 54 \r\n3 4 5 6 7 14 17 20 28 30 34 44 45 50 57 63 3 24 28 30 36 44 45 49 6 14 30 37 21 44 15 54 \r\n3 4 5 6 7 14 17 20 28 30 34 44 45 50 57 63 3 24 28 30 36 44 45 49 6 14 30 37 21 44 15 54 \r\n3 4 5 6 7 14 17 20 28 30 34 44 45 50 57 63 3 24 28 30 36 44 45 49 6 14 30 37 15 21 44 54 \r\n3 4 5 6 7 14 17 20 28 30 34 44 45 50 57 63 3 24 28 30 36 44 45 49 6 14 15 21 30 37 44 54 \r\n3 4 5 6 7 14 17 20 28 30 34 44 45 50 57 63 3 6 14 15 21 24 28 30 30 36 37 44 44 45 49 54 \r\n3 3 4 5 6 6 7 14 14 15 17 20 21 24 28 28 30 30 30 34 36 37 44 44 44 45 45 49 50 54 57 63 \r\n3 3 4 5 6 6 7 14 14 15 17 20 21 24 28 28 30 30 30 34 36 37 44 44 44 45 45 49 50 54 57 63 \r\n121;320\r\n"]
[12.061002, "o", "\r\n"]
[12.061018, "o", " ./descgen 8 | ./merge \r\n"]
[12.06175, "o", "7 6 5 4 3 2 1 "]
[12.06178, "o", "0 \r\n6 7 5 4 3 2 1 0 \r\n6 7 4 5 3 2 1 0 \r\n4 5 6 7 3 2 1 0 \r\n4 5 6 7 2 3 1 0 \r\n4 5 6 7 2 3 0 1 \r\n4 5 6 7 0 1 2 3 \r\n0 1 2 3 4 5 6 7 \r\n0 1 2 3 4 5 6 7 \r\n12;48\r\n"]
[12.06185, "o", "\r\n"]
[12.061865, "o", " ./descgen 16 | ./merge \r\n"]
[12.062574, "o", "15 14 13 12 11 10 9 "]
[12.06258, "o", "8 7 6 5 4 3 2 1 0 \r\n"]
[12.062587, "o", "14 15 13 12 11 10 9 8 7 6 5 4 3 2 1 0 \r\n14 15 12 13 11 10 9 8 7 6 5 4 3 2 1 0 \r\n12 13 14 15 11 10 9 8 7 6 5 4 3 2 1 0 \r\n12 13 14 15 10 11 9 8 7 6 5 4 3 2 1 0 \r\n"]
[12.062591, "o", "12 13 14 15 10 11 8 9 7 6 5 4 3 2 1 0 \r\n12 13 14 15 8 9 10 11 7 6 5 4 3 2 1 0 \r\n"]
[12.062595, "o", "8 9 10 11 12 13 14 15 7 6 5 4 3 2 1 0 \r\n8 9 10 11 12 13 14 15 6 7 5 4 3 2 1 0 \r\n"]
[12.062601, "o", "8 9 10 11 12 13 14 15 6 7 4 5 3 2 1 0 \r\n8 9 10 11 12 13 14 15 4 5 6 7 3 2 1 0 \r\n8 9 10 11 12 13 14 15 4 5 6 7 2 3 1 0 \r\n8 9 10 11 12 13 14 15 4 5 6 7 2 3 0 1 \r\n"]
[12.062617, "o", "8 9 10 11 12 13 14 15 4 5 6 7 0 1 2 3 \r\n8 9 10 11 12 13 14 15 0 1 2 3 4 5 6 7 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n32;128\r\n"]
[12.062728, "o", "\r\n"]
[12.062739, "o", " ./descgen 32 | ./merge \r\n"]
[12.063502, "o", "31 30 29 28 27 26 25 24 23 "]
[12.063511, "o", "22 21 20 19 18 17 16 15 14 13 12 11 10 "]
[12.063517, "o", "9 8 7 6 5 4 3 "]
[12.063521, "o", "2 1 0 \r\n"]
[12.063527, "o", "30 31 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 \r\n30 31 28 29 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 \r\n28 29 30 31 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 \r\n"]
[12.063531, "o", "28 29 30 31 26 27 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 \r\n28 29 30 31 26 27 24 25 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 \r\n"]
[12.063545, "o", "28 29 30 31 24 25 26 27 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 \r\n24 25 26 27 28 29 30 31 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 \r\n24 25 26 27 28 29 30 31 22 23 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 \r\n"]
[12.063549, "o", "24 25 26 27 28 29 30 31 22 23 20 21 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 \r\n24 25 26 27 28 29 30 31 20 21 22 23 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 \r\n24 25 26 27 28 29 30 31 20 21 22 23 18 19 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 \r\n"]
[12.063617, "o", "24 25 26 27 28 29 30 31 20 21 22 23 18 19 16 17 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 \r\n24 25 26 27 28 29 30 31 20 21 22 23 16 17 18 19 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 \r\n24 25 26 27 28 29 30 31 16 17 18 19 20 21 22 23 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 \r\n16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 \r\n16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 14 15 13 12 11 10 9 8 7 6 5 4 3 2 1 0 \r\n16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 14 15 12 13 11 10 9 8 7 6 5 4 3 2 1 0 \r\n16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 12 13 14 15 11 10 9 8 7 6 5 4 3 2 1 0 \r\n16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 12 13 14 15 10 11 9 8 7 6 5 4 3 2 1 0 \r\n16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 12 13 14 15 10 11 8 9 7 6 5 4 3 2 1 0 \r\n16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 12 13 14 15 8 9 10 11 7 6 5 4 3 2 1 0 \r\n16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 8 9 10 11 12 13 14 15 7 6 5 4 3 2 1 0 \r\n16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 8 9 10 1"]
[12.063641, "o", "1 12 13 14 15 6 7 5 4 3 2 1 0 \r\n16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 8 9 10 11 12 13 14 15 6 7 4 5 3 2 1 0 \r\n16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 8 9 10 11 12 13 14 15 4 5 6 7 3 2 1 0 \r\n16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 8 9 10 11 12 13 14 15 4 5 6 7 2 3 1 0 \r\n16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 8 9 10 11 12 13 14 15 4 5 6 7 2 3 0 1 \r\n16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 8 9 10 11 12 13 14 15 4 5 6 7 0 1 2 3 \r\n16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 8 9 10 11 12 13 14 15 0 1 2 3 4 5 6 7 \r\n16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n80;320\r\n"]
[12.063686, "o", "\r\n"]
[12.063705, "o", " ./ascgen 8 | ./merge \r\n"]
[12.06444, "o", "0 1 2 3 4 "]
[12.064456, "o", "5 6 7 \r\n0 1 2 3 4 5 6 7 \r\n0 1 2 3 4 5 6 7 \r\n0 1 2 3 4 5 6 7 \r\n0 1 2 3 4 5 6 7 \r\n0 1 2 3 4 5 6 7 \r\n0 1 2 3 4 5 6 7 \r\n0 1 2 3 4 5 6 7 \r\n0 1 2 3 4 5 6 7 \r\n12;48\r\n"]
[12.064528, "o", "\r\n"]
[12.064534, "o", " ./ascgen 16 | ./merge \r\n"]
[12.065238, "o", "0 1 2 3 "]
[12.065255, "o", "4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n"]
[12.065269, "o", "0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n"]
[12.065278, "o", "0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n32;128\r\n"]
[12.065349, "o", "\r\n"]
[12.065356, "o", " ./ascgen 32 | ./merge \r\n"]
[12.066061, "o", "0 "]
[12.066079, "o", "1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 "]
[12.066096, "o", "20 21 22 "]
[12.066109, "o", "23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n"]
[12.066123, "o", "0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n"]
[12.066138, "o", "0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n"]
[12.066151, "o", "0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n"]
[12.066167, "o", "0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n80;320\r\n"]
[12.06625, "o", "\r\n"]
[12.218032, "o", "#include <iostream>\r\n#include <sstream>\r\nusing namespace std;\r\n\r\nint SWAP = 0;\r\nint COMP = 0;\r\nint n;\r\n\r\nvoid swap(int* arr, int a, int b){\r\n    int tmp  = arr[a];\r\n    arr[a] = arr[b];\r\n    arr[b] = tmp;\r\n    SWAP++;\r\n}\r\n\r\nint ls(int a, int b){\r\n    COMP++;\r\n    return a < b;\r\n}\r\n\r\nint partition (int arr[],int low,int high)\r\n{\r\n    int pivot = arr[low];  \r\n    SWAP++;\r\n \r\n    int p = low;\r\n\r\n    for (int j = p+1; j <= high; j++)\r\n    {\r\n        if (ls(arr[j] , pivot))\r\n        {\r\n            p++;\r\n            swap(arr, p ,j);\r\n        }\r\n    }\r\n    swap(arr, p  ,low);\r\n\r\n    if(n < 50){\r\n        for(int i = 0; i < n; i++){\r\n            cout << arr[i] << \" \";\r\n        }\r\n        cout << \"\\n\";\r\n    }\r\n    return p;\r\n}\r\n\r\nvoid quick(int arr[], int b, int e){\r\n    if (b < e){\r\n        int p = partition(arr,b,e);\r\n        quick(arr,b,p-1);\r\n        quick(arr,p+1,e);\r\n    }\r\n}\r\n\r\nint main(int argc, char** argv){\r\n    cin >> n;\r\n    int arr[n];\r\n    \r\n    \r\n    for(int i = 0; i < n; i++){\r\n        cin >> arr[i];\r\n "]
[12.218086, "o", "      if(n < 50) cout << arr[i] << \" \";\r\n    }\r\n    if(n < 50) cout << \"\\n\";\r\n    \r\n    \r\n    quick(arr,0,n-1);\r\n\r\n    for(int i = 0; i < n-1; i++){\r\n        if(arr[i]> arr[i+1]){\r\n            cout << \"SORTING ERROR\\n\";\r\n            return -1; \r\n        }\r\n    }\r\n\r\n\r\n    if(n < 50){\r\n        for(int i = 0; i < n; i++){\r\n            cout << arr[i] << \" \";\r\n        }\r\n        cout << \"\\n\";\r\n    }\r\n    cout  << COMP << \";\" << SWAP << \"\\n\";\r\n}"]
[12.21821, "o", " ./randgen 8 | ./quick \r\n"]
[12.219051, "o", "1 6 1 10 0 6 13 6 \r\n0 1 1 10 6 6 13 6 \r\n0 1 1 10 6 6 13 6 \r\n0 1 1 6 6 6 10 13 \r\n0 1 1 6 6 6 10 13 \r\n0 1 1 6 6 6 10 13 \r\n0 1 1 6 6 6 10 13 \r\n19;14\r\n"]
[12.219251, "o", "\r\n ./randgen 16 | ./quick \r\n"]
[12.220057, "o", "23 13 31 31 4 14 30 21 7 13 3 6 5 25 5 1 \r\n1 13 4 14 21 7 13 3 6 5 5 23 30 25 31 31 \r\n1 13 4 14 21 7 13 3 6 5 5 23 30 25 31 31 \r\n1 5 4 7 3 6 5 13 14 13 21 23 30 25 31 31 \r\n1 3 4 5 7 6 5 13 14 13 21 23 30 25 31 31 \r\n1 3 4 5 7 6 5 13 14 13 21 23 30 25 31 31 \r\n1 3 4 5 5 6 7 13 14 13 21 23 30 25 31 31 \r\n1 3 4 5 5 6 7 13 14 13 21 23 30 25 31 31 \r\n1 3 4 5 5 6 7 13 13 14 21 23 30 25 31 31 \r\n1 3 4 5 5 6 7 13 13 14 21 23 25 30 31 31 \r\n1 3 4 5 5 6 7 13 13 14 21 23 25 30 31 31 \r\n1 3 4 5 5 6 7 13 13 14 21 23 25 30 31 31 \r\n49;43\r\n"]
[12.220167, "o", "\r\n ./randgen 32 | ./quick \r\n"]
[12.220953, "o", "29 16 25 24 62 16 31 35 4 26 2 15 0 4 17 32 20 2 44 37 45 20 48 33 20 19 58 48 3 33 53 0 \r\n0 16 25 24 16 4 26 2 15 0 4 17 20 2 20 20 19 3 29 37 45 62 48 33 32 31 58 48 35 33 53 44 \r\n0 16 25 24 16 4 26 2 15 0 4 17 20 2 20 20 19 3 29 37 45 62 48 33 32 31 58 48 35 33 53 44 \r\n0 3 4 2 15 0 4 2 16 25 26 17 20 24 20 20 19 16 29 37 45 62 48 33 32 31 58 48 35 33 53 44 \r\n0 2 2 0 3 4 4 15 16 25 26 17 20 24 20 20 19 16 29 37 45 62 48 33 32 31 58 48 35 33 53 44 \r\n0 0 2 2 3 4 4 15 16 25 26 17 20 24 20 20 19 16 29 37 45 62 48 33 32 31 58 48 35 33 53 44 \r\n0 0 2 2 3 4 4 15 16 25 26 17 20 24 20 20 19 16 29 37 45 62 48 33 32 31 58 48 35 33 53 44 \r\n0 0 2 2 3 4 4 15 16 25 26 17 20 24 20 20 19 16 29 37 45 62 48 33 32 31 58 48 35 33 53 44 \r\n0 0 2 2 3 4 4 15 16 16 17 20 24 20 20 19 25 26 29 37 45 62 48 33 32 31 58 48 35 33 53 44 \r\n0 0 2 2 3 4 4 15 16 16 17 20 24 20 20 19 25 26 29 37 45 62 48 33 32 31 58 48 35 33 53 44 \r\n0 0 2 2 3 4 4 15 16 16 17 20 24 20 20 19 25 26 29 37 45 62 48 33 32 31 58 48 35 33 53 44 \r\n0 0 2 2 3 4 4 15 16 16 "]
[12.220969, "o", "17 19 20 20 20 24 25 26 29 37 45 62 48 33 32 31 58 48 35 33 53 44 \r\n0 0 2 2 3 4 4 15 16 16 17 19 20 20 20 24 25 26 29 37 45 62 48 33 32 31 58 48 35 33 53 44 \r\n0 0 2 2 3 4 4 15 16 16 17 19 20 20 20 24 25 26 29 37 45 62 48 33 32 31 58 48 35 33 53 44 \r\n0 0 2 2 3 4 4 15 16 16 17 19 20 20 20 24 25 26 29 33 33 32 31 35 37 48 58 48 45 62 53 44 \r\n0 0 2 2 3 4 4 15 16 16 17 19 20 20 20 24 25 26 29 31 32 33 33 35 37 48 58 48 45 62 53 44 \r\n0 0 2 2 3 4 4 15 16 16 17 19 20 20 20 24 25 26 29 31 32 33 33 35 37 48 58 48 45 62 53 44 \r\n0 0 2 2 3 4 4 15 16 16 17 19 20 20 20 24 25 26 29 31 32 33 33 35 37 48 58 48 45 62 53 44 \r\n0 0 2 2 3 4 4 15 16 16 17 19 20 20 20 24 25 26 29 31 32 33 33 35 37 44 45 48 58 62 53 48 \r\n0 0 2 2 3 4 4 15 16 16 17 19 20 20 20 24 25 26 29 31 32 33 33 35 37 44 45 48 58 62 53 48 \r\n0 0 2 2 3 4 4 15 16 16 17 19 20 20 20 24 25 26 29 31 32 33 33 35 37 44 45 48 48 53 58 62 \r\n0 0 2 2 3 4 4 15 16 16 17 19 20 20 20 24 25 26 29 31 32 33 33 35 37 44 45 48 48 53 58 62 \r\n0 0 2 2 3 4 4 15 16 16 17 19 20 20 20 24 25 26"]
[12.220982, "o", " 29 31 32 33 33 35 37 44 45 48 48 53 58 62 \r\n130;90\r\n"]
[12.221072, "o", "\r\n ./descgen 8 | ./quick \r\n"]
[12.221774, "o", "7 6 5 4 "]
[12.221781, "o", "3 2 1 0 \r\n0 6 5 4 3 2 1 7 \r\n0 6 5 4 3 2 1 7 \r\n0 1 5 4 3 2 6 7 \r\n0 1 5 4 3 2 6 7 "]
[12.221786, "o", "\r\n0 1 2 4 3 5 6 7 \r\n0 1 2 4 3 5 6 7 \r\n0 1 2 3 4 5 6 7 \r\n0 1 2 3 4 5 6 7 \r\n"]
[12.22179, "o", "28;30\r\n"]
[12.221869, "o", "\r\n"]
[12.22189, "o", " ./descgen 16 | ./quick \r\n"]
[12.222641, "o", "15 14 13 12 11 "]
[12.222657, "o", "10 9 8 7 6 5 4 3 2 1 0 \r\n0 14 13 12 11 10 9 8 7 6 5 4 3 2 1 15 \r\n0 14 13 12 11 10 9 8 7 6 5 4 3 2 1 15 \r\n0 1 13 12 11 10 9 8 7 6 5 4 3 2 14 15 \r\n0 1 13 12 11 10 9 8 7 6 5 4 3 2 14 15 \r\n"]
[12.222687, "o", "0 1 2 12 11 10 9 8 7 6 5 4 3 13 14 15 \r\n0 1 2 12 11 10 9 8 7 6 5 4 3 13 14 15 \r\n0 1 2 3 11 10 9 8 7 6 5 4 12 13 14 15 \r\n0 1 2 3 11 10 9 8 7 6 5 4 12 13 14 15 \r\n0 1 2 3 4 10 9 8 7 6 5 11 12 13 14 15 \r\n0 1 2 3 4 10 9 8 7 6 5 11 12 13 14 15 \r\n0 1 2 3 4 5 9 8 7 6 10 11 12 13 14 15 \r\n0 1 2 3 4 5 9 8 7 6 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 8 7 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 8 7 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n120;94\r\n"]
[12.222837, "o", "\r\n ./descgen 32 | ./quick \r\n"]
[12.223546, "o", "31 30 29 28 27 "]
[12.223567, "o", "26 25 24 23 22 21 20 19 "]
[12.223586, "o", "18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 \r\n0 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 31 \r\n0 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 31 \r\n0 1 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 30 31 \r\n"]
[12.223608, "o", "0 1 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 30 31 \r\n0 1 2 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 29 30 31 \r\n0 1 2 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 29 30 31 \r\n0 1 2 3 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 28 29 30 31 \r\n0 1 2 3 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 28 29 30 31 \r\n0 1 2 3 4 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 27 28 29 30 31 \r\n0 1 2 3 4 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 27 28 29 30 31 \r\n0 1 2 3 4 5 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 26 27 28 29 30 31 \r\n0 1 2 3 4 5 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 23 22 21 20 19 18 17 16 15 14 13 12 11 1"]
[12.223629, "o", "0 9 8 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 22 21 20 19 18 17 16 15 14 13 12 11 10 9 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 22 21 20 19 18 17 16 15 14 13 12 11 10 9 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 21 20 19 18 17 16 15 14 13 12 11 10 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 21 20 19 18 17 16 15 14 13 12 11 10 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 20 19 18 17 16 15 14 13 12 11 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 20 19 18 17 16 15 14 13 12 11 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 19 18 17 16 15 14 13 12 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 19 18 17 16 15 14 13 12 20 21 22 23 24 25 26 27 28 29 30 31 \r\n"]
[12.223662, "o", "0 1 2 3 4 5 6 7 8 9 10 11 12 18 17 16 15 14 13 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 18 17 16 15 14 13 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 17 16 15 14 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 17 16 15 14 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 16 15 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 16 15 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n"]
[12.223683, "o", "0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n496;318\r\n"]
[12.223746, "o", "\r\n"]
[12.223766, "o", " ./ascgen 8 | ./quick \r\n"]
[12.224495, "o", "0 1 2 3 "]
[12.224512, "o", "4 5 6 7 \r\n0 1 2 3 4 5 6 7 \r\n0 1 2 3 4 5 6 7 \r\n0 1 2 3 4 5 6 7 \r\n0 1 2 3 4 5 6 7 \r\n0 1 2 3 4 5 6 7 \r\n0 1 2 3 4 5 6 7 \r\n0 1 2 3 4 5 6 7 \r\n0 1 2 3 4 5 6 7 \r\n28;14\r\n"]
[12.22459, "o", "\r\n"]
[12.224605, "o", " ./ascgen 16 | ./quick \r\n"]
[12.225309, "o", "0 1 2 "]
[12.225328, "o", "3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n"]
[12.225348, "o", "0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n120;30\r\n"]
[12.225418, "o", "\r\n"]
[12.225436, "o", " ./ascgen 32 | ./quick \r\n"]
[12.22614, "o", "0 1 2 3 4 5 6 7 "]
[12.226154, "o", "8 9 10 11 12 13 14 15 16 17 18 19 20 21 "]
[12.226178, "o", "22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n"]
[12.226214, "o", "0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 "]
[12.226237, "o", "22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n"]
[12.226265, "o", "0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n496;62\r\n"]
[12.226335, "o", "\r\n"]
[12.377407, "o", "#include <iostream>\r\n#include <sstream>\r\nusing namespace std;\r\n\r\nint SWAP = 0;\r\nint COMP = 0;\r\n\r\nvoid swap(int* arr, int a, int b){\r\n    int tmp  = arr[a];\r\n    arr[a] = arr[b];\r\n    arr[b] = tmp;\r\n    SWAP++;\r\n}\r\nvoid insert(int * arr, int low, int high){\r\n    for(int j = low; j < high; j++){\r\n        int key = arr[j];\r\n        int i = j -1;\r\n        while(i >= low && arr[i] > key){\r\n            COMP++;\r\n            swap(arr,i,i+1);\r\n            i--;\r\n        }\r\n        arr[i+1] = key;\r\n        SWAP++;\r\n    }\r\n}\r\n\r\n\r\nint main(int argc, char** argv){\r\n    int n;\r\n    cin >> n;\r\n    int arr[n];\r\n    \r\n    \r\n    for(int i = 0; i < n; i++){\r\n        cin >> arr[i];\r\n       if(n < 50) cout << arr[i] << \" \";\r\n    }\r\n    if(n < 50) cout << \"\\n\";\r\n    \r\n    \r\n    // for(int j = 1; j < n; j++){\r\n    //     int key = arr[j];\r\n    //     int i = j -1;\r\n    //     while(i >= 0 && arr[i] > key){\r\n    //         COMP++;\r\n    //         swap(arr,i,i+1);\r\n    //         i--;\r\n    //     }\r\n    //     arr[i+1] = key;\r\n    // "]
[12.377511, "o", "    SWAP++;\r\n    // }\r\n\r\n    insert(arr, 0,n);\r\n    for(int i = 0; i < n-1; i++){\r\n        if(arr[i]> arr[i+1]){\r\n            cout << \"SORTING ERROR\\n\";\r\n            return -1; \r\n        }\r\n    }\r\n\r\n\r\n    if(n < 50){\r\n        for(int i = 0; i < n; i++){\r\n            cout << arr[i] << \" \";\r\n        }\r\n        cout << \"\\n\";\r\n    }\r\n    cout  << COMP << \";\" << SWAP << \"\\n\";\r\n} ./randgen 8 | ./insert \r\n"]
[12.37831, "o", "15 9 10 2 7 1 8 0 \r\n0 1 2 7 8 9 10 15 \r\n23;31\r\n"]
[12.378513, "o", "\r\n ./randgen 16 | ./insert \r\n"]
[12.379238, "o", "20 15 26 26 18 10 "]
[12.37933, "o", "26 0 17 22 7 19 23 20 10 31 \r\n0 7 10 10 15 17 18 19 20 20 22 23 26 26 26 31 \r\n57;73\r\n"]
[12.379404, "o", "\r\n ./randgen 32 | ./insert \r\n"]
[12.380166, "o", "10 33 34 25 56 48 19 4 4 13 39 9 "]
[12.380196, "o", "48 51 29 8 45 33 5 21 11 2 5 7 46 37 27 23 14 19 62 50 \r\n2 4 4 5 5 7 8 9 10 11 13 14 19 19 21 23 25 27 29 33 33 34 37 39 45 46 48 48 50 51 56 62 \r\n243;275\r\n"]
[12.380279, "o", "\r\n"]
[12.380301, "o", " ./descgen 8 | ./insert \r\n"]
[12.381162, "o", "7 6 5 4 "]
[12.381185, "o", "3 2 1 0 \r\n0 1 2 3 4 5 6 7 \r\n28;36\r\n"]
[12.381245, "o", "\r\n"]
[12.381264, "o", " ./descgen 16 | ./insert \r\n"]
[12.381994, "o", "15 14 13 12 "]
[12.382002, "o", "11 10 9 8 7 6 5 4 3 2 1 0 \r\n"]
[12.382023, "o", "0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n120;136\r\n"]
[12.382104, "o", "\r\n ./descgen 32 | ./insert \r\n"]
[12.382833, "o", "31 30 29 28 27 26 "]
[12.382853, "o", "25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 \r\n"]
[12.38288, "o", "0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n496;528\r\n"]
[12.38295, "o", "\r\n"]
[12.382967, "o", " ./ascgen 8 | ./insert \r\n"]
[12.383693, "o", "0 1 2 3 4 5 "]
[12.383711, "o", "6 7 \r\n0 1 2 3 4 5 6 7 \r\n0;8\r\n"]
[12.383787, "o", "\r\n"]
[12.383804, "o", " ./ascgen 16 | ./insert \r\n"]
[12.384522, "o", "0 1 2 3 4 5 6 7 8 "]
[12.384541, "o", "9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0;16\r\n"]
[12.38462, "o", "\r\n ./ascgen 32 | ./insert \r\n"]
[12.385314, "o", "0 1 2 3 4 5 6 "]
[12.385332, "o", "7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 "]
[12.385346, "o", "30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0;32\r\n"]
[12.38542, "o", "\r\n"]
[12.53877, "o", "#include <iostream>\r\n#include <sstream>\r\nusing namespace std;\r\n\r\nint SWAP = 0;\r\nint COMP = 0;\r\nint n;\r\n\r\nvoid swap(int* arr, int a, int b){\r\n    int tmp  = arr[a];\r\n    arr[a] = arr[b];\r\n    arr[b] = tmp;\r\n    SWAP++;\r\n}\r\n\r\nint ls(int a, int b){\r\n    COMP++;\r\n    return a < b;\r\n}\r\n\r\nvoid partition (int arr[],int low,int high, int* lp, int* rp)\r\n{\r\n    // cout << \"in:\" << endl;\r\n    // for(int i = 0; i < 10; i++){\r\n    //     cout << arr[i] << \" \";\r\n    //     }\r\n    // cout << \"\\n\";\r\n    if(ls(arr[high],arr[low])) swap(arr,high,low);\r\n    int p = arr[high];  \r\n    int q = arr[low];\r\n    SWAP+=2;\r\n\r\n    // cout << \"p = \" << p << \" q = \" << q << \" low = \" << low << \" high = \" << high << endl;\r\n \r\n    int l = (low);\r\n    int h = (high);\r\n\r\n    for (int j = low + 1; j < h; j++)\r\n    {\r\n        if (l - low >= high - h)\r\n        {\r\n            if(ls(arr[j], q)){\r\n                l++;\r\n                swap(arr,j,l);\r\n            } else if(ls( p , arr[j])){\r\n                h--;\r\n                swap(arr,j,h);\r\n     "]
[12.538862, "o", "           j--;\r\n            } \r\n        } else {\r\n            if(ls( p , arr[j])){\r\n                h--;\r\n                swap(arr,j,h);\r\n                j--;\r\n            } else if(ls(arr[j], q)){\r\n                l++;\r\n                swap(arr,j,l);\r\n            } \r\n        }\r\n    }\r\n    swap(arr, h ,high);\r\n    swap(arr, l ,low);\r\n    *lp = l;\r\n    *rp = h;\r\n\r\n    // cout << \"out:\" << endl;\r\n    // for(int i = 0; i < 10; i++){\r\n    //     cout << arr[i] << \" \";\r\n    //     }\r\n    // cout << \"\\n\";\r\n}\r\n\r\nvoid quick(int arr[], int b, int e){\r\n    if (b < e){\r\n        int p,l;\r\n        partition(arr,b,e, &l, &p);\r\n        // cout << l << \" \" << p << endl;\r\n        quick(arr,b,l-1);\r\n        quick(arr,l+1,p-1);\r\n        quick(arr,p+1,e);\r\n    }\r\n}\r\n\r\nint main(int argc, char** argv){\r\n\r\n    cin >> n;\r\n    int arr[n];\r\n    \r\n    \r\n    for(int i = 0; i < n; i++){\r\n        cin >> arr[i];\r\n       if(n < 50) cout << arr[i] << \" \";\r\n    }\r\n    if(n < 50) cout << \"\\n\";\r\n    \r\n    \r\n    quick(arr,0,n-1);\r\n\r\n    for(int"]
[12.538876, "o", " i = 0; i < n-1; i++){\r\n        if(arr[i]> arr[i+1]){\r\n            cout << \"SORTING ERROR\\n\";\r\n            return -1; \r\n        }\r\n    }\r\n\r\n\r\n    if(n < 50){\r\n        for(int i = 0; i < n; i++){\r\n            cout << arr[i] << \" \";\r\n        }\r\n        cout << \"\\n\";\r\n    }\r\n    cout  << COMP << \";\" << SWAP << \"\\n\";\r\n} ./randgen 8 | ./dpquick \r\n"]
[12.539758, "o", "12 11 2 4 13 6 14 11 \r\n2 4 6 11 11 12 13 14 \r\n13;20\r\n"]
[12.539831, "o", "\r\n ./randgen 16 | ./dpquick \r\n"]
[12.540592, "o", "24 21 17 20 4 15 19 25 8 22 24 0 30 18 26 16 \r\n0 4 8 15 16 17 18 19 20 21 22 24 24 25 26 30 \r\n45;37\r\n"]
[12.540679, "o", "\r\n ./randgen 32 | ./dpquick \r\n"]
[12.54141, "o", "46 52 48 4 22 26 8 29 34 54 35 20 15 48 41 36 6 15 57 1 4 22 52 46 13 17 19 41 48 37 3 26 \r\n1 3 4 4 6 8 13 15 15 17 19 20 22 22 26 26 29 34 35 36 37 41 41 46 46 48 48 48 52 52 54 57 \r\n119;109\r\n"]
[12.541523, "o", "\r\n ./descgen 8 | ./dpquick \r\n"]
[12.542321, "o", "7 6 5 4 3 2 1 0 \r\n0 1 2 3 4 5 6 7 \r\n28;20\r\n"]
[12.542401, "o", "\r\n ./descgen 16 | ./dpquick \r\n"]
[12.543155, "o", "15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n120;40\r\n"]
[12.543247, "o", "\r\n ./descgen 32 | ./dpquick \r\n"]
[12.544039, "o", "31 30 29 28 27 26 25 "]
[12.544065, "o", "24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n496;80\r\n"]
[12.544168, "o", "\r\n"]
[12.544197, "o", " ./ascgen 8 | ./dpquick \r\n"]
[12.544947, "o", "0 1 2 3 "]
[12.544965, "o", "4 5 6 7 \r\n0 1 2 3 4 5 6 7 \r\n28;16\r\n"]
[12.545035, "o", "\r\n"]
[12.545058, "o", " ./ascgen 16 | ./dpquick \r\n"]
[12.545774, "o", "0 1 2 3 "]
[12.545792, "o", "4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n120;32\r\n"]
[12.545864, "o", "\r\n"]
[12.545881, "o", " ./ascgen 32 | ./dpquick \r\n"]
[12.546585, "o", "0 1 2 3 4 "]
[12.546604, "o", "5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n"]
[12.546638, "o", "0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n496;64\r\n"]
[12.546695, "o", "\r\n"]
[12.723306, "o", "#include <iostream>\r\n#include <sstream>\r\n#include <queue>\r\nusing namespace std;\r\n\r\nint SWAP = 0;\r\nint COMP = 0;\r\nint n;\r\n\r\nvoid swap(int* arr, int a, int b){\r\n    int tmp  = arr[a];\r\n    arr[a] = arr[b];\r\n    arr[b] = tmp;\r\n    SWAP++;\r\n}\r\n\r\nint ls(int a, int b){\r\n    COMP++;\r\n    return a < b;\r\n}\r\n\r\nvoid merge(int* arr, int  b, int m, int e){\r\n    int i = b;\r\n    int j = m+1;\r\n    int k = 0;\r\n    int arr_out[e-b+1];\r\n    while(i <= m  && j <= e){\r\n        if(ls(arr[i] , arr[j])){\r\n            arr_out[k] = arr[i];\r\n            \r\n            i++;\r\n        } else{\r\n            arr_out[k] = arr[j];\r\n            j++;\r\n        }\r\n        k++;\r\n        SWAP++;\r\n    }\r\n    while(i <= m){\r\n        arr_out[k++] = arr[i++];\r\n        SWAP++;\r\n    }\r\n    while(j <= e){\r\n        arr_out[k++] = arr[j++];\r\n        SWAP++;\r\n    }\r\n    for(int p = 0; p <= e-b; p++ ){\r\n        arr[p+b] = arr_out[p];\r\n        SWAP++;\r\n    }\r\n    if(n < 50){\r\n        for(int i = 0; i < n; i++){\r\n            cout << arr[i] << \" \";\r\n        }\r\n   "]
[12.723426, "o", "     cout << \"\\n\";\r\n    }\r\n}\r\n\r\nvoid insert(int * arr, int low, int high){\r\n    for(int j = low; j < high+1; j++){\r\n        int key = arr[j];\r\n        int i = j -1;\r\n        while(i >= low && arr[i] > key){\r\n            COMP++;\r\n            swap(arr,i,i+1);\r\n            i--;\r\n        }\r\n        arr[i+1] = key;\r\n        SWAP++;\r\n    }\r\n}\r\n\r\nvoid merge_sort(int arr[], int b, int e){\r\n    if(b==e) return;\r\n    else if(e-b <= 7){\r\n        insert(arr,b,e);\r\n        if(n < 50){\r\n        for(int i = 0; i < n; i++){\r\n            cout << arr[i] << \" \";\r\n        }\r\n        cout << \"\\n\";\r\n        }\r\n    } else{\r\n        int m = b + (e-b)/2;\r\n        merge_sort(arr, b, m );\r\n        merge_sort(arr, m +1, e);\r\n        merge(arr,b, m, e );\r\n    }\r\n}\r\n\r\nint main(int argc, char** argv){\r\n\r\n    cin >> n;\r\n    int arr[n];\r\n\r\n    for(int i = 0; i < n; i++){\r\n        cin >> arr[i];\r\n        if(n<50) cout << arr[i] << \" \";\r\n    }\r\n    if(n<50) cout << \"\\n\";\r\n    \r\n    // int test[6] = { 6, 5, 4, 3, 2, 1};\r\n    merge_sort(arr,0,n-"]
[12.723456, "o", "1);\r\n\r\n\r\n    for(int i = 0; i < n-1; i++){\r\n        if(arr[i]> arr[i+1]){\r\n            cout << \"SORTING ERROR\\n\";\r\n            return -1; \r\n        }\r\n    }\r\n\r\n\r\n    if(n < 50){\r\n        for(int i = 0; i < n; i++){\r\n            cout << arr[i] << \" \";\r\n        }\r\n        cout << \"\\n\";\r\n    }\r\n    cout  << COMP << \";\" << SWAP << \"\\n\";\r\n} ./randgen 8 | ./hybrid \r\n"]
[12.724194, "o", "12 10 12 15 7 8 2 15 \r\n2 7 8 10 12 12 15 15 \r\n2 7 8 10 12 12 15 15 \r\n15;23\r\n"]
[12.724289, "o", "\r\n ./randgen 16 | ./hybrid \r\n"]
[12.725062, "o", "15 30 4 19 14 19 22 23 12 24 21 4 20 0 14 2 \r\n4 14 15 19 19 22 23 30 12 24 21 4 20 0 14 2 \r\n4 14 15 19 19 22 23 30 0 2 4 12 14 20 21 24 \r\n0 2 4 4 12 14 14 15 19 19 20 21 22 23 24 30 \r\n0 2 4 4 12 14 14 15 19 19 20 21 22 23 24 30 \r\n44;77\r\n"]
[12.725111, "o", "\r\n"]
[12.725128, "o", " ./randgen 32 | ./hybrid \r\n"]
[12.725832, "o", "47 59 8 19 51 15 "]
[12.725849, "o", "31 56 39 28 45 17 51 12 18 60 32 52 13 44 48 33 4 48 17 31 7 27 62 3 34 27 \r\n"]
[12.725866, "o", "8 15 19 31 47 51 56 59 39 28 45 17 51 12 18 60 32 52 13 44 48 33 4 48 17 31 7 27 62 3 34 27 \r\n8 15 19 31 47 51 56 59 12 17 18 28 39 45 51 60 32 52 13 44 48 33 4 48 17 31 7 27 62 3 34 27 \r\n8 12 15 17 18 19 28 31 39 45 47 51 51 56 59 60 32 52 13 44 48 33 4 48 17 31 7 27 62 3 34 27 \r\n8 12 15 17 18 19 28 31 39 45 47 51 51 56 59 60 4 13 32 33 44 48 48 52 17 31 7 27 62 3 34 27 \r\n8 12 15 17 18 19 28 31 39 45 47 51 51 56 59 60 4 13 32 33 44 48 48 52 3 7 17 27 27 31 34 62 \r\n8 12 15 17 18 19 28 31 39 45 47 51 51 56 59 60 3 4 7 13 17 27 27 31 32 33 34 44 48 48 52 62 \r\n"]
[12.725886, "o", "3 4 7 8 12 13 15 17 17 18 19 27 27 28 31 31 32 33 34 39 44 45 47 48 48 51 51 52 56 59 60 62 \r\n3 4 7 8 12 13 15 17 17 18 19 27 27 28 31 31 32 33 34 39 44 45 47 48 48 51 51 52 56 59 60 62 \r\n113;212\r\n"]
[12.725946, "o", "\r\n"]
[12.725962, "o", " ./descgen 8 | ./hybrid \r\n"]
[12.726676, "o", "7 6 5 4 3 2 1 0 \r\n"]
[12.726704, "o", "0 1 2 3 4 5 6 7 \r\n0 1 2 3 4 5 6 7 \r\n28;36\r\n"]
[12.72683, "o", "\r\n ./descgen 16 | ./hybrid \r\n"]
[12.727619, "o", "15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 \r\n8 9 10 11 12 13 14 15 7 6 5 4 3 2 1 0 \r\n8 9 10 11 12 13 14 15 0 1 2 3 4 5 6 7 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n64;104\r\n"]
[12.727681, "o", "\r\n"]
[12.727708, "o", " ./descgen 32 | ./hybrid \r\n"]
[12.728472, "o", "31 30 29 28 27 26 "]
[12.728489, "o", "25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 "]
[12.728506, "o", "0 \r\n24 25 26 27 28 29 30 31 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 \r\n24 25 26 27 28 29 30 31 16 17 18 19 20 21 22 23 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 \r\n16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 \r\n"]
[12.72853, "o", "16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 8 9 10 11 12 13 14 15 7 6 5 4 3 2 1 0 \r\n16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 8 9 10 11 12 13 14 15 0 1 2 3 4 5 6 7 \r\n16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n144;272\r\n"]
[12.728593, "o", "\r\n"]
[12.728611, "o", " ./ascgen 8 | ./hybrid \r\n"]
[12.729297, "o", "0 1 2 3 "]
[12.729315, "o", "4 5 6 7 \r\n0 1 2 3 4 5 6 7 \r\n0 1 2 3 4 5 6 7 \r\n0;8\r\n"]
[12.729384, "o", "\r\n"]
[12.729399, "o", " ./ascgen 16 | ./hybrid \r\n"]
[12.730094, "o", "0 1 2 3 4 5 6 "]
[12.730113, "o", "7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n8;48\r\n"]
[12.730178, "o", "\r\n"]
[12.730197, "o", " ./ascgen 32 | ./hybrid \r\n"]
[12.730923, "o", "0 1 2 3 4 5 6 "]
[12.730942, "o", "7 8 9 10 11 12 13 14 15 16 17 18 "]
[12.731048, "o", "19 20 21 22 23 24 "]
[12.731063, "o", "25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n"]
[12.731077, "o", "0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n32;160\r\n"]
[12.73115, "o", "\r\n"]
[12.731326, "o", "\u001b]0;krrer@krrer-Z590-D: ~/4-sem/aisd/261742/lista_2\u0007\u001b[01;32mkrrer@krrer-Z590-D\u001b[00m:\u001b[01;34m~/4-sem/aisd/261742/lista_2\u001b[00m$ "]
[14.433675, "o", "e"]
[14.689573, "o", "x"]
[14.773609, "o", "i"]
[14.917598, "o", "t"]
[15.341722, "o", "\r\n"]
[15.341816, "o", "exit\r\n"]
