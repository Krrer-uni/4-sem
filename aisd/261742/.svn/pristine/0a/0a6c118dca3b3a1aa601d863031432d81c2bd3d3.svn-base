{"version": 2, "width": 203, "height": 53, "timestamp": 1648409681, "env": {"SHELL": "/bin/bash", "TERM": "xterm-256color"}}
[0.141773, "o", "\u001b]0;krrer@krrer-Z590-D: ~/4-sem/aisd/261742/lista_2\u0007\u001b[01;32mkrrer@krrer-Z590-D\u001b[00m:\u001b[01;34m~/4-sem/aisd/261742/lista_2\u001b[00m$ "]
[1.846063, "o", "."]
[1.923697, "o", "/"]
[2.184453, "o", "p"]
[2.292247, "o", "r"]
[2.380411, "o", "e"]
[2.80497, "o", "s"]
[3.019866, "o", "entation.sh "]
[3.52044, "o", "\r\n"]
[3.525884, "o", "#!/bin/bash\r\n\r\ncat presentation.sh\r\n\r\nfor alg in merge quick insert dpquick hybrid\r\ndo\r\n    g++ ${alg}.cpp -o $alg\r\n    cat ${alg}.cpp\r\n    for alg2 in randgen descgen ascgen\r\n    do\r\n        for N in 8 16 32\r\n        do\r\n            echo \" ./$alg2 $N | ./$alg \"\r\n            ./$alg2 $N | ./$alg\r\n            echo\r\n        done\r\n    done\r\ndone\r\n\r\n"]
[3.72992, "o", "#include <iostream>\r\n#include <sstream>\r\n#include <queue>\r\nusing namespace std;\r\n\r\nint SWAP = 0;\r\nint COMP = 0;\r\nint n;\r\n\r\nvoid swap(int* arr, int a, int b){\r\n    int tmp  = arr[a];\r\n    arr[a] = arr[b];\r\n    arr[b] = tmp;\r\n    SWAP++;\r\n}\r\n\r\nint ls(int a, int b){\r\n    COMP++;\r\n    return a < b;\r\n}\r\n\r\nvoid merge(int* arr, int  b, int m, int e){\r\n    int i = b;\r\n    int j = m+1;\r\n    int k = 0;\r\n    int arr_out[e-b+1];\r\n    while(i <= m  && j <= e){\r\n        if(ls(arr[i] , arr[j])){\r\n            arr_out[k] = arr[i];\r\n            \r\n            i++;\r\n        } else{\r\n            arr_out[k] = arr[j];\r\n            j++;\r\n        }\r\n        k++;\r\n        SWAP++;\r\n    }\r\n    while(i <= m){\r\n        arr_out[k++] = arr[i++];\r\n        SWAP++;\r\n    }\r\n    while(j <= e){\r\n        arr_out[k++] = arr[j++];\r\n        SWAP++;\r\n    }\r\n    for(int p = 0; p <= e-b; p++ ){\r\n        arr[p+b] = arr_out[p];\r\n        SWAP++;\r\n    }\r\n    if(n < 50){\r\n        for(int i = 0; i < n; i++){\r\n            cout << arr[i] << \" \";\r\n        }\r\n   "]
[3.73001, "o", "     cout << \"\\n\";\r\n    }\r\n}\r\n\r\nvoid merge_sort(int arr[], int b, int e){\r\n    if(b==e) return;\r\n    else{\r\n        int m = b + (e-b)/2;\r\n        merge_sort(arr, b, m );\r\n        merge_sort(arr, m +1, e);\r\n        merge(arr,b, m, e );\r\n    }\r\n}\r\n\r\nint main(int argc, char** argv){\r\n\r\n    cin >> n;\r\n    int arr[n];\r\n\r\n    for(int i = 0; i < n; i++){\r\n        cin >> arr[i];\r\n        if(n<50) cout << arr[i] << \" \";\r\n    }\r\n    if(n<50) cout << \"\\n\";\r\n    \r\n    // int test[6] = { 6, 5, 4, 3, 2, 1};\r\n    merge_sort(arr,0,n-1);\r\n\r\n\r\n    for(int i = 0; i < n-1; i++){\r\n        if(arr[i]> arr[i+1]){\r\n            cout << \"SORTING ERROR\\n\";\r\n            return -1; \r\n        }\r\n    }\r\n\r\n\r\n    if(n < 50){\r\n        for(int i = 0; i < n; i++){\r\n            cout << arr[i] << \" \";\r\n        }\r\n        cout << \"\\n\";\r\n    }\r\n    cout  << COMP << \";\" << SWAP << \"\\n\";\r\n} ./randgen 8 | ./merge \r\n"]
[3.730782, "o", "9 11 9 1 8 8 15 1 \r\n9 11 9 1 8 8 15 1 \r\n9 11 1 9 8 8 15 1 \r\n1 9 9 11 8 8 15 1 \r\n1 9 9 11 8 8 15 1 \r\n1 9 9 11 8 8 1 15 \r\n1 9 9 11 1 8 8 15 \r\n1 1 8 8 9 9 11 15 \r\n1 1 8 8 9 9 11 15 \r\n16;48\r\n"]
[3.730838, "o", "\r\n"]
[3.730859, "o", " ./randgen 16 | ./merge \r\n"]
[3.731622, "o", "16 27 14 9 2 26 31 7 6 25 1 18 1 15 0 22 \r\n16 27 14 9 2 26 31 7 6 25 1 18 1 15 0 22 \r\n16 27 9 14 2 26 31 7 6 25 1 18 1 15 0 22 \r\n9 14 16 27 2 26 31 7 6 25 1 18 1 15 0 22 \r\n9 14 16 27 2 26 31 7 6 25 1 18 1 15 0 22 \r\n9 14 16 27 2 26 7 31 6 25 1 18 1 15 0 22 \r\n"]
[3.731643, "o", "9 14 16 27 2 7 26 31 6 25 1 18 1 15 0 22 \r\n2 7 9 14 16 26 27 31 6 25 1 18 1 15 0 22 \r\n2 7 9 14 16 26 27 31 6 25 1 18 1 15 0 22 \r\n2 7 9 14 16 26 27 31 6 25 1 18 1 15 0 22 \r\n2 7 9 14 16 26 27 31 1 6 18 25 1 15 0 22 \r\n2 7 9 14 16 26 27 31 1 6 18 25 1 15 0 22 \r\n2 7 9 14 16 26 27 31 1 6 18 25 1 15 0 22 \r\n2 7 9 14 16 26 27 31 1 6 18 25 0 1 15 22 \r\n2 7 9 14 16 26 27 31 0 1 1 6 15 18 22 25 \r\n0 1 1 2 6 7 9 14 15 16 18 22 25 26 27 31 \r\n0 1 1 2 6 7 9 14 15 16 18 22 25 26 27 31 \r\n46;128\r\n"]
[3.731718, "o", "\r\n"]
[3.731738, "o", " ./randgen 32 | ./merge \r\n"]
[3.732486, "o", "57 14 52 57 63 18 37 29 47 44 26 51 33 59 50 20 22 "]
[3.73252, "o", "59 58 55 35 14 45 16 14 53 54 29 39 4 33 45 \r\n14 57 52 57 63 18 37 29 47 44 26 51 33 59 50 20 22 59 58 55 35 14 45 16 14 53 54 29 39 4 33 45 \r\n14 57 52 57 63 18 37 29 47 44 26 51 33 59 50 20 22 59 58 55 35 14 45 16 14 53 54 29 39 4 33 45 \r\n14 52 57 57 63 18 37 29 47 44 26 51 33 59 50 20 22 59 58 55 35 14 45 16 14 53 54 29 39 4 33 45 \r\n14 52 57 57 18 63 37 29 47 44 26 51 33 59 50 20 22 59 58 55 35 14 45 16 14 53 54 29 39 4 33 45 \r\n14 52 57 57 18 63 29 37 47 44 26 51 33 59 50 20 22 59 58 55 35 14 45 16 14 53 54 29 39 4 33 45 \r\n14 52 57 57 18 29 37 63 47 44 26 51 33 59 50 20 22 59 58 55 35 14 45 16 14 53 54 29 39 4 33 45 \r\n14 18 29 37 52 57 57 63 47 44 26 51 33 59 50 20 22 59 58 55 35 14 45 16 14 53 54 29 39 4 33 45 \r\n14 18 29 37 52 57 57 63 44 47 26 51 33 59 50 20 22 59 58 55 35 14 45 16 14 53 54 29 39 4 33 45 \r\n14 18 29 37 52 57 57 63 44 47 26 51 33 59 50 20 22 59 58 55 35 14 45 16 14 53 54 29 39 4 33 45 \r\n"]
[3.732541, "o", "14 18 29 37 52 57 57 63 26 44 47 51 33 59 50 20 22 59 58 55 35 14 45 16 14 53 54 29 39 4 33 45 \r\n14 18 29 37 52 57 57 63 26 44 47 51 33 59 50 20 22 59 58 55 35 14 45 16 14 53 54 29 39 4 33 45 \r\n14 18 29 37 52 57 57 63 26 44 47 51 33 59 20 50 22 59 58 55 35 14 45 16 14 53 54 29 39 4 33 45 \r\n14 18 29 37 52 57 57 63 26 44 47 51 20 33 50 59 22 59 58 55 35 14 45 16 14 53 54 29 39 4 33 45 \r\n14 18 29 37 52 57 57 63 20 26 33 44 47 50 51 59 22 59 58 55 35 14 45 16 14 53 54 29 39 4 33 45 \r\n14 18 20 26 29 33 37 44 47 50 51 52 57 57 59 63 22 59 58 55 35 14 45 16 14 53 54 29 39 4 33 45 \r\n14 18 20 26 29 33 37 44 47 50 51 52 57 57 59 63 22 59 58 55 35 14 45 16 14 53 54 29 39 4 33 45 \r\n14 18 20 26 29 33 37 44 47 50 51 52 57 57 59 63 22 59 55 58 35 14 45 16 14 53 54 29 39 4 33 45 \r\n14 18 20 26 29 33 37 44 47 50 51 52 57 57 59 63 22 55 58 59 35 14 45 16 14 53 54 29 39 4 33 45 \r\n"]
[3.732561, "o", "14 18 20 26 29 33 37 44 47 50 51 52 57 57 59 63 22 55 58 59 14 35 45 16 14 53 54 29 39 4 33 45 \r\n14 18 20 26 29 33 37 44 47 50 51 52 57 57 59 63 22 55 58 59 14 35 16 45 14 53 54 29 39 4 33 45 \r\n14 18 20 26 29 33 37 44 47 50 51 52 57 57 59 63 22 55 58 59 14 16 35 45 14 53 54 29 39 4 33 45 \r\n14 18 20 26 29 33 37 44 47 50 51 52 57 57 59 63 14 16 22 35 45 55 58 59 14 53 54 29 39 4 33 45 \r\n14 18 20 26 29 33 37 44 47 50 51 52 57 57 59 63 14 16 22 35 45 55 58 59 14 53 54 29 39 4 33 45 \r\n14 18 20 26 29 33 37 44 47 50 51 52 57 57 59 63 14 16 22 35 45 55 58 59 14 53 29 54 39 4 33 45 \r\n14 18 20 26 29 33 37 44 47 50 51 52 57 57 59 63 14 16 22 35 45 55 58 59 14 29 53 54 39 4 33 45 \r\n14 18 20 26 29 33 37 44 47 50 51 52 57 57 59 63 14 16 22 35 45 55 58 59 14 29 53 54 4 39 33 45 \r\n"]
[3.732579, "o", "14 18 20 26 29 33 37 44 47 50 51 52 57 57 59 63 14 16 22 35 45 55 58 59 14 29 53 54 4 39 33 45 \r\n14 18 20 26 29 33 37 44 47 50 51 52 57 57 59 63 14 16 22 35 45 55 58 59 14 29 53 54 4 33 39 45 \r\n14 18 20 26 29 33 37 44 47 50 51 52 57 57 59 63 14 16 22 35 45 55 58 59 4 14 29 33 39 45 53 54 \r\n14 18 20 26 29 33 37 44 47 50 51 52 57 57 59 63 4 14 14 16 22 29 33 35 39 45 45 53 54 55 58 59 \r\n4 14 14 14 16 18 20 22 26 29 29 33 33 35 37 39 44 45 45 47 50 51 52 53 54 55 57 57 58 59 59 63 \r\n4 14 14 14 16 18 20 22 26 29 29 33 33 35 37 39 44 45 45 47 50 51 52 53 54 55 57 57 58 59 59 63 \r\n123;320\r\n"]
[3.732662, "o", "\r\n ./descgen 8 | ./merge \r\n"]
[3.73341, "o", "7 6 5 4 3 2 1 0 \r\n6 7 5 4 3 2 1 0 \r\n"]
[3.733451, "o", "6 7 4 5 3 2 1 0 \r\n4 5 6 7 3 2 1 0 \r\n4 5 6 7 2 3 1 0 \r\n4 5 6 7 2 3 0 1 \r\n4 5 6 7 0 1 2 3 \r\n0 1 2 3 4 5 6 7 \r\n0 1 2 3 4 5 6 7 \r\n12;48\r\n"]
[3.733503, "o", "\r\n ./descgen 16 | ./merge \r\n"]
[3.734216, "o", "15 14 13 12 11 10 9 8 7 "]
[3.734244, "o", "6 5 4 3 2 1 0 \r\n14 15 13 12 11 10 9 8 7 6 5 4 3 2 1 0 \r\n14 15 12 13 11 10 9 8 7 6 5 4 3 2 1 0 \r\n12 13 14 15 11 10 9 8 7 6 5 4 3 2 1 0 \r\n12 13 14 15 10 11 9 8 7 6 5 4 3 2 1 0 \r\n12 13 14 15 10 11 8 9 7 6 5 4 3 2 1 0 \r\n12 13 14 15 8 9 10 11 7 6 5 4 3 2 1 0 \r\n8 9 10 11 12 13 14 15 7 6 5 4 3 2 1 0 \r\n8 9 10 11 12 13 14 15 6 7 5 4 3 2 1 0 \r\n"]
[3.734263, "o", "8 9 10 11 12 13 14 15 6 7 4 5 3 2 1 0 \r\n8 9 10 11 12 13 14 15 4 5 6 7 3 2 1 0 \r\n8 9 10 11 12 13 14 15 4 5 6 7 2 3 1 0 \r\n8 9 10 11 12 13 14 15 4 5 6 7 2 3 0 1 \r\n8 9 10 11 12 13 14 15 4 5 6 7 0 1 2 3 \r\n8 9 10 11 12 13 14 15 0 1 2 3 4 5 6 7 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n32;128\r\n"]
[3.734329, "o", "\r\n"]
[3.734345, "o", " ./descgen 32 | ./merge \r\n"]
[3.735081, "o", "31 30 29 28 27 26 25 24 23 22 "]
[3.735127, "o", "21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 \r\n30 31 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 \r\n30 31 28 29 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 \r\n28 29 30 31 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 \r\n28 29 30 31 26 27 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 \r\n28 29 30 31 26 27 24 25 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 \r\n28 29 30 31 24 25 26 27 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 \r\n24 25 26 27 28 29 30 31 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 \r\n24 25 26 27 28 29 30 31 22 23 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 \r\n24 25 26 27 28 29 30 31 22 23 20 21 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 \r\n"]
[3.735153, "o", "24 25 26 27 28 29 30 31 20 21 22 23 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 \r\n24 25 26 27 28 29 30 31 20 21 22 23 18 19 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 \r\n24 25 26 27 28 29 30 31 20 21 22 23 18 19 16 17 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 \r\n24 25 26 27 28 29 30 31 20 21 22 23 16 17 18 19 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 \r\n24 25 26 27 28 29 30 31 16 17 18 19 20 21 22 23 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 \r\n16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 \r\n16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 14 15 13 12 11 10 9 8 7 6 5 4 3 2 1 0 \r\n16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 14 15 12 13 11 10 9 8 7 6 5 4 3 2 1 0 \r\n16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 12 13 14 15 11 10 9 8 7 6 5 4 3 2 1 0 \r\n16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 12 13 14 15 10 11 9 8 7 6 5 4 3 2 1 0 \r\n16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 12 13 14 15 10 11 8 9 7 6 5 4 3 2 1 0 \r\n16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 12 13 14"]
[3.735175, "o", " 15 8 9 10 11 7 6 5 4 3 2 1 0 \r\n16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 8 9 10 11 12 13 14 15 7 6 5 4 3 2 1 0 \r\n16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 8 9 10 11 12 13 14 15 6 7 5 4 3 2 1 0 \r\n16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 8 9 10 11 12 13 14 15 6 7 4 5 3 2 1 0 \r\n16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 8 9 10 11 12 13 14 15 4 5 6 7 3 2 1 0 \r\n16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 8 9 10 11 12 13 14 15 4 5 6 7 2 3 1 0 \r\n16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 8 9 10 11 12 13 14 15 4 5 6 7 2 3 0 1 \r\n"]
[3.735194, "o", "16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 8 9 10 11 12 13 14 15 4 5 6 7 0 1 2 3 \r\n16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 8 9 10 11 12 13 14 15 0 1 2 3 4 5 6 7 \r\n16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n80;320\r\n"]
[3.735283, "o", "\r\n"]
[3.735303, "o", " ./ascgen 8 | ./merge \r\n"]
[3.736019, "o", "0 1 2 3 "]
[3.736046, "o", "4 5 6 7 \r\n0 1 2 3 4 5 6 7 \r\n0 1 2 3 4 5 6 7 \r\n0 1 2 3 4 5 6 7 \r\n0 1 2 3 4 5 6 7 \r\n0 1 2 3 4 5 6 7 \r\n"]
[3.73607, "o", "0 1 2 3 4 5 6 7 \r\n0 1 2 3 4 5 6 7 \r\n0 1 2 3 4 5 6 7 \r\n12;48\r\n"]
[3.736114, "o", "\r\n"]
[3.736135, "o", " ./ascgen 16 | ./merge \r\n"]
[3.736834, "o", "0 1 2 "]
[3.736855, "o", "3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n"]
[3.73688, "o", "0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n32;128\r\n"]
[3.736945, "o", "\r\n"]
[3.736965, "o", " ./ascgen 32 | ./merge \r\n"]
[3.737648, "o", "0 1 2 3 4 5 6 7 8 9 10 11 "]
[3.737676, "o", "12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n"]
[3.737702, "o", "0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n"]
[3.737725, "o", "0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 "]
[3.737749, "o", "22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n80;320\r\n"]
[3.737815, "o", "\r\n"]
[3.897814, "o", "#include <iostream>\r\n#include <sstream>\r\nusing namespace std;\r\n\r\nint SWAP = 0;\r\nint COMP = 0;\r\nint n;\r\n\r\nvoid swap(int* arr, int a, int b){\r\n    int tmp  = arr[a];\r\n    arr[a] = arr[b];\r\n    arr[b] = tmp;\r\n    SWAP++;\r\n}\r\n\r\nint ls(int a, int b){\r\n    COMP++;\r\n    return a < b;\r\n}\r\n\r\nint partition (int arr[],int low,int high)\r\n{\r\n    int pivot = arr[low];  \r\n    SWAP++;\r\n \r\n    int p = low;\r\n\r\n    for (int j = p+1; j <= high; j++)\r\n    {\r\n        if (ls(arr[j] , pivot))\r\n        {\r\n            p++;\r\n            swap(arr, p ,j);\r\n        }\r\n    }\r\n    swap(arr, p  ,low);\r\n\r\n    if(n < 50){\r\n        for(int i = 0; i < n; i++){\r\n            cout << arr[i] << \" \";\r\n        }\r\n        cout << \"\\n\";\r\n    }\r\n    return p;\r\n}\r\n\r\nvoid quick(int arr[], int b, int e){\r\n    if (b < e){\r\n        int p = partition(arr,b,e);\r\n        quick(arr,b,p-1);\r\n        quick(arr,p+1,e);\r\n    }\r\n}\r\n\r\nint main(int argc, char** argv){\r\n    cin >> n;\r\n    int arr[n];\r\n    \r\n    \r\n    for(int i = 0; i < n; i++){\r\n        cin >> arr[i];\r\n "]
[3.897848, "o", "      if(n < 50) cout << arr[i] << \" \";\r\n    }\r\n    if(n < 50) cout << \"\\n\";\r\n    \r\n    \r\n    quick(arr,0,n-1);\r\n\r\n    for(int i = 0; i < n-1; i++){\r\n        if(arr[i]> arr[i+1]){\r\n            cout << \"SORTING ERROR\\n\";\r\n            return -1; \r\n        }\r\n    }\r\n\r\n\r\n    if(n < 50){\r\n        for(int i = 0; i < n; i++){\r\n            cout << arr[i] << \" \";\r\n        }\r\n        cout << \"\\n\";\r\n    }\r\n    cout  << COMP << \";\" << SWAP << \"\\n\";\r\n}"]
[3.897865, "o", " ./randgen 8 | ./quick \r\n"]
[3.898695, "o", "10 10 15 5 13 11 9 9 \r\n9 5 9 10 13 11 15 10 \r\n5 9 9 10 13 11 15 10 \r\n5 9 9 10 10 11 13 15 \r\n5 9 9 10 10 11 13 15 \r\n5 9 9 10 10 11 13 15 \r\n13;14\r\n"]
[3.898784, "o", "\r\n ./randgen 16 | ./quick \r\n"]
[3.899542, "o", "12 4 5 9 1 26 12 10 29 3 28 4 3 10 29 18 \r\n10 4 5 9 1 10 3 4 3 12 28 26 29 12 29 18 \r\n3 4 5 9 1 3 4 10 10 12 28 26 29 12 29 18 \r\n1 3 5 9 4 3 4 10 10 12 28 26 29 12 29 18 \r\n1 3 4 4 3 5 9 10 10 12 28 26 29 12 29 18 \r\n1 3 3 4 4 5 9 10 10 12 28 26 29 12 29 18 \r\n1 3 3 4 4 5 9 10 10 12 18 26 12 28 29 29 \r\n1 3 3 4 4 5 9 10 10 12 12 18 26 28 29 29 \r\n1 3 3 4 4 5 9 10 10 12 12 18 26 28 29 29 \r\n1 3 3 4 4 5 9 10 10 12 12 18 26 28 29 29 \r\n43;41\r\n"]
[3.899711, "o", "\r\n ./randgen 32 | ./quick \r\n"]
[3.900515, "o", "58 43 3 63 10 14 2 34 31 61 42 26 62 63 2 12 3 40 47 43 36 63 32 60 25 61 62 36 29 49 63 44 \r\n44 43 3 10 14 2 34 31 42 26 2 12 3 40 47 43 36 32 25 36 29 49 58 60 63 61 62 61 62 63 63 63 \r\n29 43 3 10 14 2 34 31 42 26 2 12 3 40 43 36 32 25 36 44 47 49 58 60 63 61 62 61 62 63 63 63 \r\n25 3 10 14 2 26 2 12 3 29 34 31 42 40 43 36 32 43 36 44 47 49 58 60 63 61 62 61 62 63 63 63 \r\n3 3 10 14 2 2 12 25 26 29 34 31 42 40 43 36 32 43 36 44 47 49 58 60 63 61 62 61 62 63 63 63 \r\n2 2 3 14 3 10 12 25 26 29 34 31 42 40 43 36 32 43 36 44 47 49 58 60 63 61 62 61 62 63 63 63 \r\n2 2 3 14 3 10 12 25 26 29 34 31 42 40 43 36 32 43 36 44 47 49 58 60 63 61 62 61 62 63 63 63 \r\n2 2 3 12 3 10 14 25 26 29 34 31 42 40 43 36 32 43 36 44 47 49 58 60 63 61 62 61 62 63 63 63 \r\n2 2 3 10 3 12 14 25 26 29 34 31 42 40 43 36 32 43 36 44 47 49 58 60 63 61 62 61 62 63 63 63 \r\n2 2 3 3 10 12 14 25 26 29 34 31 42 40 43 36 32 43 36 44 47 49 58 60 63 61 62 61 62 63 63 63 \r\n2 2 3 3 10 12 14 25 26 29 32 31 34 40 43 36 42 43 36 44 47 49 58 60 63 61 62 61 62 6"]
[3.900547, "o", "3 63 63 \r\n2 2 3 3 10 12 14 25 26 29 31 32 34 40 43 36 42 43 36 44 47 49 58 60 63 61 62 61 62 63 63 63 \r\n2 2 3 3 10 12 14 25 26 29 31 32 34 36 36 40 42 43 43 44 47 49 58 60 63 61 62 61 62 63 63 63 \r\n2 2 3 3 10 12 14 25 26 29 31 32 34 36 36 40 42 43 43 44 47 49 58 60 63 61 62 61 62 63 63 63 \r\n2 2 3 3 10 12 14 25 26 29 31 32 34 36 36 40 42 43 43 44 47 49 58 60 63 61 62 61 62 63 63 63 \r\n2 2 3 3 10 12 14 25 26 29 31 32 34 36 36 40 42 43 43 44 47 49 58 60 63 61 62 61 62 63 63 63 \r\n2 2 3 3 10 12 14 25 26 29 31 32 34 36 36 40 42 43 43 44 47 49 58 60 63 61 62 61 62 63 63 63 \r\n2 2 3 3 10 12 14 25 26 29 31 32 34 36 36 40 42 43 43 44 47 49 58 60 63 61 62 61 62 63 63 63 \r\n2 2 3 3 10 12 14 25 26 29 31 32 34 36 36 40 42 43 43 44 47 49 58 60 62 61 62 61 63 63 63 63 \r\n2 2 3 3 10 12 14 25 26 29 31 32 34 36 36 40 42 43 43 44 47 49 58 60 61 61 62 62 63 63 63 63 \r\n2 2 3 3 10 12 14 25 26 29 31 32 34 36 36 40 42 43 43 44 47 49 58 60 61 61 62 62 63 63 63 63 \r\n2 2 3 3 10 12 14 25 26 29 31 32 34 36 36 40 42 43 43 44 47 49 58 60 61 61 "]
[3.900578, "o", "62 62 63 63 63 63 \r\n2 2 3 3 10 12 14 25 26 29 31 32 34 36 36 40 42 43 43 44 47 49 58 60 61 61 62 62 63 63 63 63 \r\n2 2 3 3 10 12 14 25 26 29 31 32 34 36 36 40 42 43 43 44 47 49 58 60 61 61 62 62 63 63 63 63 \r\n132;120\r\n"]
[3.900605, "o", "\r\n"]
[3.900626, "o", " ./descgen 8 | ./quick \r\n"]
[3.901406, "o", "7 6 5 4 3 2 1 0 \r\n0 6 5 4 3 2 1 7 \r\n0 6 5 4 3 2 1 7 \r\n0 1 5 4 3 2 6 7 \r\n0 1 5 4 3 2 6 7 \r\n0 1 2 4 3 5 6 7 \r\n0 1 2 4 3 5 6 7 \r\n0 1 2 3 4 5 6 7 \r\n0 1 2 3 4 5 6 7 \r\n28;30\r\n"]
[3.901487, "o", "\r\n ./descgen 16 | ./quick \r\n"]
[3.902199, "o", "15 14 13 12 11 10 9 8 7 6 5 4 "]
[3.902229, "o", "3 2 1 0 \r\n0 14 13 12 11 10 9 8 7 6 5 4 3 2 1 15 \r\n0 14 13 12 11 10 9 8 7 6 5 4 3 2 1 15 \r\n0 1 13 12 11 10 9 8 7 6 5 4 3 2 14 15 \r\n0 1 13 12 11 10 9 8 7 6 5 4 3 2 14 15 \r\n0 1 2 12 11 10 9 8 7 6 5 4 3 13 14 15 \r\n0 1 2 12 11 10 9 8 7 6 5 4 3 13 14 15 \r\n0 1 2 3 11 10 9 8 7 6 5 4 12 13 14 15 \r\n0 1 2 3 11 10 9 8 7 6 5 4 12 13 14 15 \r\n0 1 2 3 4 10 9 8 7 6 5 11 12 13 14 15 \r\n0 1 2 3 4 10 9 8 7 6 5 11 12 13 14 15 \r\n0 1 2 3 4 5 9 8 7 6 10 11 12 13 14 15 \r\n0 1 2 3 4 5 9 8 7 6 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 8 7 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 8 7 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n"]
[3.902266, "o", "0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n120;94\r\n"]
[3.902317, "o", "\r\n"]
[3.902336, "o", " ./descgen 32 | ./quick \r\n"]
[3.903024, "o", "31 30 29 28 27 "]
[3.90305, "o", "26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 \r\n"]
[3.903073, "o", "0 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 31 \r\n0 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 31 \r\n0 1 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 30 31 \r\n"]
[3.903095, "o", "0 1 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 30 31 \r\n0 1 2 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 29 30 31 \r\n0 1 2 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 29 30 31 \r\n0 1 2 3 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 28 29 30 31 \r\n0 1 2 3 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 28 29 30 31 \r\n0 1 2 3 4 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 27 28 29 30 31 \r\n"]
[3.903105, "o", "0 1 2 3 4 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 27 28 29 30 31 \r\n"]
[3.903138, "o", "0 1 2 3 4 5 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 26 27 28 29 30 31 \r\n0 1 2 3 4 5 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 22 21 20 19 18 17 16 15 14 13 12 11 10 9 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 22 21 20 19 18 17 16 15 14 13 12 11 10 9 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 21 20 19 18 17 16 15 14 13 12 11 10 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 21 20 19 18 17 16 15 14 13 12 11 10 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 20 19 18 17 16 15 14 13 12 11 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 20 19 18 17 16 15 14 13 12 11 21 "]
[3.903146, "o", "22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 19 18 17 16 15 14 13 12 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 19 18 17 16 15 14 13 12 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 18 17 16 15 14 13 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 18 17 16 15 14 13 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 17 16 15 14 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n"]
[3.903176, "o", "0 1 2 3 4 5 6 7 8 9 10 11 12 13 17 16 15 14 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 16 15 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 16 15 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n496;318\r\n"]
[3.903231, "o", "\r\n"]
[3.903251, "o", " ./ascgen 8 | ./quick \r\n"]
[3.903971, "o", "0 1 2 3 "]
[3.903991, "o", "4 5 6 7 \r\n0 1 2 3 4 5 6 7 \r\n0 1 2 3 4 5 6 7 \r\n0 1 2 3 4 5 6 7 \r\n0 1 2 3 4 5 6 7 \r\n0 1 2 3 4 5 6 7 \r\n0 1 2 3 4 5 6 7 \r\n0 1 2 3 4 5 6 7 \r\n0 1 2 3 4 5 6 7 \r\n28;14\r\n"]
[3.904064, "o", "\r\n"]
[3.904089, "o", " ./ascgen 16 | ./quick \r\n"]
[3.904771, "o", "0 1 2 3 4 5 "]
[3.904794, "o", "6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n"]
[3.904818, "o", "0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n120;30\r\n"]
[3.904881, "o", "\r\n"]
[3.904902, "o", " ./ascgen 32 | ./quick \r\n"]
[3.905571, "o", "0 1 2 3 4 "]
[3.905595, "o", "5 6 7 8 9 10 11 12 13 14 "]
[3.905615, "o", "15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n"]
[3.905638, "o", "0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n"]
[3.905659, "o", "0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n"]
[3.905682, "o", "0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n496;62\r\n"]
[3.905738, "o", "\r\n"]
[4.06349, "o", "#include <iostream>\r\n#include <sstream>\r\nusing namespace std;\r\n\r\nint SWAP = 0;\r\nint COMP = 0;\r\n\r\nvoid swap(int* arr, int a, int b){\r\n    int tmp  = arr[a];\r\n    arr[a] = arr[b];\r\n    arr[b] = tmp;\r\n    SWAP++;\r\n}\r\nvoid insert(int * arr, int low, int high){\r\n    for(int j = low; j < high; j++){\r\n        int key = arr[j];\r\n        int i = j -1;\r\n        while(i >= low && arr[i] > key){\r\n            COMP++;\r\n            swap(arr,i,i+1);\r\n            i--;\r\n        }\r\n        arr[i+1] = key;\r\n        SWAP++;\r\n    }\r\n}\r\n\r\n\r\nint main(int argc, char** argv){\r\n    int n;\r\n    cin >> n;\r\n    int arr[n];\r\n    \r\n    \r\n    for(int i = 0; i < n; i++){\r\n        cin >> arr[i];\r\n       if(n < 50) cout << arr[i] << \" \";\r\n    }\r\n    if(n < 50) cout << \"\\n\";\r\n    \r\n    \r\n    // for(int j = 1; j < n; j++){\r\n    //     int key = arr[j];\r\n    //     int i = j -1;\r\n    //     while(i >= 0 && arr[i] > key){\r\n    //         COMP++;\r\n    //         swap(arr,i,i+1);\r\n    //         i--;\r\n    //     }\r\n    //     arr[i+1] = key;\r\n    // "]
[4.063531, "o", "    SWAP++;\r\n    // }\r\n\r\n    insert(arr, 0,n);\r\n    for(int i = 0; i < n-1; i++){\r\n        if(arr[i]> arr[i+1]){\r\n            cout << \"SORTING ERROR\\n\";\r\n            return -1; \r\n        }\r\n    }\r\n\r\n\r\n    if(n < 50){\r\n        for(int i = 0; i < n; i++){\r\n            cout << arr[i] << \" \";\r\n        }\r\n        cout << \"\\n\";\r\n    }\r\n    cout  << COMP << \";\" << SWAP << \"\\n\";\r\n}"]
[4.063598, "o", " ./randgen 8 | ./insert \r\n"]
[4.064552, "o", "3 10 1 7 2 9 3 8 \r\n1 2 3 3 7 8 9 10 \r\n12;20\r\n"]
[4.064689, "o", "\r\n ./randgen 16 | ./insert \r\n"]
[4.065518, "o", "30 0 9 7 3 24 23 11 16 3 5 15 10 25 12 29 \r\n0 3 3 5 7 9 10 11 12 15 16 23 24 25 29 30 \r\n48;64\r\n"]
[4.065627, "o", "\r\n ./randgen 32 | ./insert \r\n"]
[4.066362, "o", "29 17 4 5 55 58 33 54 47 62 62 40 46 38 22 40 4 3 10 31 24 18 30 13 49 41 39 14 42 39 0 42 \r\n0 3 4 4 5 10 13 14 17 18 22 24 29 30 31 33 38 39 39 40 40 41 42 42 46 47 49 54 55 58 62 62 \r\n268;300\r\n"]
[4.06643, "o", "\r\n"]
[4.066449, "o", " ./descgen 8 | ./insert \r\n"]
[4.067168, "o", "7 6 5 4 "]
[4.067175, "o", "3 2 1 0 \r\n0 1 2 3 4 5 6 7 \r\n28;36\r\n"]
[4.067262, "o", "\r\n ./descgen 16 | ./insert \r\n"]
[4.068018, "o", "15 14 13 12 11 "]
[4.068023, "o", "10 9 8 7 6 5 "]
[4.068027, "o", "4 3 2 1 "]
[4.068031, "o", "0 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n120;136\r\n"]
[4.068105, "o", "\r\n"]
[4.068112, "o", " ./descgen 32 | ./insert \r\n"]
[4.068874, "o", "31 30 29 28 "]
[4.06888, "o", "27 26 25 24 23 22 21 20 "]
[4.068884, "o", "19 18 17 16 "]
[4.068889, "o", "15 14 13 12 "]
[4.068893, "o", "11 10 9 8 "]
[4.068902, "o", "7 6 5 4 3 2 1 0 \r\n"]
[4.068907, "o", "0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n496;528\r\n"]
[4.068982, "o", "\r\n"]
[4.069001, "o", " ./ascgen 8 | ./insert \r\n"]
[4.069695, "o", "0 1 2 3 4 5 6 "]
[4.069714, "o", "7 \r\n0 1 2 3 4 5 6 7 \r\n0;8\r\n"]
[4.069773, "o", "\r\n"]
[4.069789, "o", " ./ascgen 16 | ./insert \r\n"]
[4.070469, "o", "0 1 2 3 4 "]
[4.070485, "o", "5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0;16\r\n"]
[4.070559, "o", "\r\n"]
[4.070575, "o", " ./ascgen 32 | ./insert \r\n"]
[4.071293, "o", "0 1 2 3 4 5 "]
[4.071301, "o", "6 7 8 9 10 11 12 13 14 15 16 17 "]
[4.071305, "o", "18 19 20 21 22 "]
[4.071309, "o", "23 "]
[4.071324, "o", "24 25 26 27 "]
[4.071333, "o", "28 29 30 31 \r\n"]
[4.071337, "o", "0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0;32\r\n"]
[4.071411, "o", "\r\n"]
[4.243939, "o", "#include <iostream>\r\n#include <sstream>\r\nusing namespace std;\r\n\r\nint SWAP = 0;\r\nint COMP = 0;\r\nint n;\r\n\r\nvoid swap(int* arr, int a, int b){\r\n    int tmp  = arr[a];\r\n    arr[a] = arr[b];\r\n    arr[b] = tmp;\r\n    SWAP++;\r\n}\r\n\r\nint ls(int a, int b){\r\n    COMP++;\r\n    return a < b;\r\n}\r\n\r\nvoid partition (int arr[],int low,int high, int* lp, int* rp)\r\n{\r\n    // cout << \"in:\" << endl;\r\n    // for(int i = 0; i < 10; i++){\r\n    //     cout << arr[i] << \" \";\r\n    //     }\r\n    // cout << \"\\n\";\r\n    if(ls(arr[high],arr[low])) swap(arr,high,low);\r\n    int p = arr[high];  \r\n    int q = arr[low];\r\n    SWAP+=2;\r\n\r\n    // cout << \"p = \" << p << \" q = \" << q << \" low = \" << low << \" high = \" << high << endl;\r\n \r\n    int l = (low);\r\n    int h = (high);\r\n\r\n    for (int j = low + 1; j < h; j++)\r\n    {\r\n        if (l - low < high - h)\r\n        {\r\n            if(ls(arr[j], q)){\r\n                l++;\r\n                swap(arr,j,l);\r\n            } else if(ls( p , arr[j])){\r\n                h--;\r\n                swap(arr,j,h);\r\n      "]
[4.243973, "o", "          j--;\r\n            } \r\n        } else {\r\n            if(ls( p , arr[j])){\r\n                h--;\r\n                swap(arr,j,h);\r\n                j--;\r\n            } else if(ls(arr[j], q)){\r\n                l++;\r\n                swap(arr,j,l);\r\n            } \r\n        }\r\n    }\r\n    swap(arr, h ,high);\r\n    swap(arr, l ,low);\r\n    *lp = l;\r\n    *rp = h;\r\n\r\n    // cout << \"out:\" << endl;\r\n    // for(int i = 0; i < 10; i++){\r\n    //     cout << arr[i] << \" \";\r\n    //     }\r\n    // cout << \"\\n\";\r\n}\r\n\r\nvoid quick(int arr[], int b, int e){\r\n    if (b < e){\r\n        int p,l;\r\n        partition(arr,b,e, &l, &p);\r\n        // cout << l << \" \" << p << endl;\r\n        quick(arr,b,l-1);\r\n        quick(arr,l+1,p-1);\r\n        quick(arr,p+1,e);\r\n    }\r\n}\r\n\r\nint main(int argc, char** argv){\r\n\r\n    cin >> n;\r\n    int arr[n];\r\n    \r\n    \r\n    for(int i = 0; i < n; i++){\r\n        cin >> arr[i];\r\n       if(n < 50) cout << arr[i] << \" \";\r\n    }\r\n    if(n < 50) cout << \"\\n\";\r\n    \r\n    \r\n    quick(arr,0,n-1);\r\n\r\n    for(int "]
[4.243979, "o", "i = 0; i < n-1; i++){\r\n        if(arr[i]> arr[i+1]){\r\n            cout << \"SORTING ERROR\\n\";\r\n            return -1; \r\n        }\r\n    }\r\n\r\n\r\n    if(n < 50){\r\n        for(int i = 0; i < n; i++){\r\n            cout << arr[i] << \" \";\r\n        }\r\n        cout << \"\\n\";\r\n    }\r\n    cout  << COMP << \";\" << SWAP << \"\\n\";\r\n} ./randgen 8 | ./dpquick \r\n"]
[4.2448, "o", "3 14 8 1 1 2 4 11 \r\n1 1 2 3 4 8 11 14 \r\n15;18\r\n"]
[4.244939, "o", "\r\n ./randgen 16 | ./dpquick \r\n"]
[4.245713, "o", "13 26 11 15 7 0 10 20 29 31 30 9 4 5 12 17 \r\n0 4 5 7 9 10 11 12 13 15 17 20 26 29 30 31 \r\n46;50\r\n"]
[4.245799, "o", "\r\n ./randgen 32 | ./dpquick \r\n"]
[4.246528, "o", "53 54 3 47 15 40 16 32 10 29 49 29 38 56 46 45 19 1 36 7 31 54 34 50 35 30 33 56 3 45 19 18 \r\n1 3 3 7 10 15 16 18 19 19 29 29 30 31 32 33 34 35 36 38 40 45 45 46 47 49 50 53 54 54 56 56 \r\n142;97\r\n"]
[4.246608, "o", "\r\n ./descgen 8 | ./dpquick \r\n"]
[4.247358, "o", "7 6 5 4 "]
[4.247382, "o", "3 2 1 0 \r\n0 1 2 3 4 5 6 7 \r\n28;20\r\n"]
[4.247567, "o", "\r\n ./descgen 16 | ./dpquick \r\n"]
[4.248323, "o", "15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n120;40\r\n"]
[4.248381, "o", "\r\n ./descgen 32 | ./dpquick \r\n"]
[4.24909, "o", "31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n496;80\r\n"]
[4.249191, "o", "\r\n ./ascgen 8 | ./dpquick \r\n"]
[4.249885, "o", "0 1 2 3 4 5 6 7 \r\n0 1 2 3 4 5 6 7 \r\n28;16\r\n"]
[4.25002, "o", "\r\n ./ascgen 16 | ./dpquick \r\n"]
[4.250721, "o", "0 1 2 3 4 5 "]
[4.250741, "o", "6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n120;32\r\n"]
[4.25083, "o", "\r\n"]
[4.250852, "o", " ./ascgen 32 | ./dpquick \r\n"]
[4.251728, "o", "0 1 2 3 4 "]
[4.251736, "o", "5 6 7 8 9 10 11 12 13 14 "]
[4.251741, "o", "15 "]
[4.251745, "o", "16 17 18 19 20 21 22 23 24 25 26 27 28 29 "]
[4.251751, "o", "30 31 \r\n"]
[4.251757, "o", "0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n496;64\r\n"]
[4.251867, "o", "\r\n"]
[4.438081, "o", "#include <iostream>\r\n#include <sstream>\r\n#include <queue>\r\nusing namespace std;\r\n\r\nint SWAP = 0;\r\nint COMP = 0;\r\nint n;\r\n\r\nvoid swap(int* arr, int a, int b){\r\n    int tmp  = arr[a];\r\n    arr[a] = arr[b];\r\n    arr[b] = tmp;\r\n    SWAP++;\r\n}\r\n\r\nint ls(int a, int b){\r\n    COMP++;\r\n    return a < b;\r\n}\r\n\r\nvoid merge(int* arr, int  b, int m, int e){\r\n    int i = b;\r\n    int j = m+1;\r\n    int k = 0;\r\n    int arr_out[e-b+1];\r\n    while(i <= m  && j <= e){\r\n        if(ls(arr[i] , arr[j])){\r\n            arr_out[k] = arr[i];\r\n            \r\n            i++;\r\n        } else{\r\n            arr_out[k] = arr[j];\r\n            j++;\r\n        }\r\n        k++;\r\n        SWAP++;\r\n    }\r\n    while(i <= m){\r\n        arr_out[k++] = arr[i++];\r\n        SWAP++;\r\n    }\r\n    while(j <= e){\r\n        arr_out[k++] = arr[j++];\r\n        SWAP++;\r\n    }\r\n    for(int p = 0; p <= e-b; p++ ){\r\n        arr[p+b] = arr_out[p];\r\n        SWAP++;\r\n    }\r\n    if(n < 50){\r\n        for(int i = 0; i < n; i++){\r\n            cout << arr[i] << \" \";\r\n        }\r\n   "]
[4.438113, "o", "     cout << \"\\n\";\r\n    }\r\n}\r\n\r\nvoid insert(int * arr, int low, int high){\r\n    for(int j = low; j < high+1; j++){\r\n        int key = arr[j];\r\n        int i = j -1;\r\n        while(i >= low && arr[i] > key){\r\n            COMP++;\r\n            swap(arr,i,i+1);\r\n            i--;\r\n        }\r\n        arr[i+1] = key;\r\n        SWAP++;\r\n    }\r\n}\r\n\r\nvoid merge_sort(int arr[], int b, int e){\r\n    if(b==e) return;\r\n    else if(e-b <= 7){\r\n        insert(arr,b,e);\r\n        if(n < 50){\r\n        for(int i = 0; i < n; i++){\r\n            cout << arr[i] << \" \";\r\n        }\r\n        cout << \"\\n\";\r\n        }\r\n    } else{\r\n        int m = b + (e-b)/2;\r\n        merge_sort(arr, b, m );\r\n        merge_sort(arr, m +1, e);\r\n        merge(arr,b, m, e );\r\n    }\r\n}\r\n\r\nint main(int argc, char** argv){\r\n\r\n    cin >> n;\r\n    int arr[n];\r\n\r\n    for(int i = 0; i < n; i++){\r\n        cin >> arr[i];\r\n        if(n<50) cout << arr[i] << \" \";\r\n    }\r\n    if(n<50) cout << \"\\n\";\r\n    \r\n    // int test[6] = { 6, 5, 4, 3, 2, 1};\r\n    merge_sort(arr,0,n-"]
[4.438132, "o", "1);\r\n\r\n\r\n    for(int i = 0; i < n-1; i++){\r\n        if(arr[i]> arr[i+1]){\r\n            cout << \"SORTING ERROR\\n\";\r\n            return -1; \r\n        }\r\n    }\r\n\r\n\r\n    if(n < 50){\r\n        for(int i = 0; i < n; i++){\r\n            cout << arr[i] << \" \";\r\n        }\r\n        cout << \"\\n\";\r\n    }\r\n    cout  << COMP << \";\" << SWAP << \"\\n\";\r\n}"]
[4.438204, "o", " ./randgen 8 | ./hybrid \r\n"]
[4.439097, "o", "10 10 4 14 11 15 3 10 \r\n"]
[4.439134, "o", "3 4 10 10 10 11 14 15 \r\n3 4 10 10 10 11 14 15 \r\n12;20\r\n"]
[4.439229, "o", "\r\n"]
[4.439247, "o", " ./randgen 16 | ./hybrid \r\n"]
[4.439992, "o", "12 20 12 7 4 "]
[4.439998, "o", "5 5 0 28 22 8 27 "]
[4.440002, "o", "10 6 31 26 \r\n"]
[4.440007, "o", "0 4 5 5 7 12 12 20 28 22 8 27 10 6 31 26 \r\n0 4 5 5 7 12 12 20 6 8 10 22 26 27 28 31 \r\n0 4 5 5 6 7 8 10 12 12 20 22 26 27 28 31 \r\n"]
[4.440011, "o", "0 4 5 5 6 7 8 10 12 12 20 22 26 27 28 31 \r\n49;86\r\n"]
[4.440082, "o", "\r\n ./randgen 32 | ./hybrid \r\n"]
[4.440833, "o", "23 38 43 45 "]
[4.440839, "o", "2 19 28 56 62 29 11 30 27 27 "]
[4.440843, "o", "47 19 53 40 3 17 "]
[4.440848, "o", "51 53 41 6 38 "]
[4.440852, "o", "62 45 48 25 25 "]
[4.440856, "o", "2 41 \r\n2 19 23 28 38 43 45 56 62 29 11 30 27 27 47 19 53 40 3 17 51 53 41 6 38 62 45 48 25 25 2 41 \r\n"]
[4.440861, "o", "2 19 23 28 38 43 45 56 11 19 27 27 29 30 47 62 53 40 3 17 51 53 41 6 38 62 45 48 25 25 2 41 \r\n2 11 19 19 23 27 27 28 29 30 38 43 45 47 56 62 53 40 3 17 51 53 41 6 38 62 45 48 25 25 2 41 \r\n"]
[4.440879, "o", "2 11 19 19 23 27 27 28 29 30 38 43 45 47 56 62 3 6 17 40 41 51 53 53 38 62 45 48 25 25 2 41 \r\n2 11 19 19 23 27 27 28 29 30 38 43 45 47 56 62 3 6 17 40 41 51 53 53 2 25 25 38 41 45 48 62 \r\n2 11 19 19 23 27 27 28 29 30 38 43 45 47 56 62 2 3 6 17 25 25 38 40 41 41 45 48 51 53 53 62 \r\n2 2 3 6 11 17 19 19 23 25 25 27 27 28 29 30 38 38 40 41 41 43 45 45 47 48 51 53 53 56 62 62 \r\n2 2 3 6 11 17 19 19 23 25 25 27 27 28 29 30 38 38 40 41 41 43 45 45 47 48 51 53 53 56 62 62 \r\n123;222\r\n"]
[4.440954, "o", "\r\n"]
[4.440965, "o", " ./descgen 8 | ./hybrid \r\n"]
[4.441679, "o", "7 6 5 4 3 "]
[4.441694, "o", "2 1 0 \r\n0 1 2 3 4 5 6 7 \r\n0 1 2 3 4 5 6 7 \r\n28;36\r\n"]
[4.441765, "o", "\r\n"]
[4.441771, "o", " ./descgen 16 | ./hybrid \r\n"]
[4.44248, "o", "15 14 13 12 11 10 9 "]
[4.442486, "o", "8 7 6 5 4 "]
[4.442491, "o", "3 2 1 0 \r\n"]
[4.442494, "o", "8 9 10 11 12 13 14 15 7 6 5 4 3 2 1 0 \r\n8 9 10 11 12 13 14 15 0 1 2 3 4 5 6 7 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n"]
[4.442498, "o", "0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n64;104\r\n"]
[4.442577, "o", "\r\n"]
[4.442594, "o", " ./descgen 32 | ./hybrid \r\n"]
[4.44329, "o", "31 30 29 28 27 "]
[4.443296, "o", "26 25 24 23 22 21 20 19 "]
[4.443305, "o", "18 17 16 15 14 13 12 11 "]
[4.44331, "o", "10 9 8 7 6 5 4 3 2 1 "]
[4.443342, "o", "0 \r\n24 25 26 27 28 29 30 31 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 \r\n24 25 26 27 28 29 30 31 16 17 18 19 20 21 22 23 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 \r\n16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 \r\n16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 8 9 10 11 12 13 14 15 7 6 5 4 3 2 1 0 \r\n16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 8 9 10 11 12 13 14 15 0 1 2 3 4 5 6 7 \r\n"]
[4.443388, "o", "16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n144;272\r\n"]
[4.443481, "o", "\r\n ./ascgen 8 | ./hybrid \r\n"]
[4.444183, "o", "0 1 2 3 4 5 6 7 \r\n0 1 2 3 4 5 6 7 \r\n0 1 2 3 4 5 6 7 \r\n0;8\r\n"]
[4.444265, "o", "\r\n"]
[4.444284, "o", " ./ascgen 16 | ./hybrid \r\n"]
[4.444983, "o", "0 1 2 3 "]
[4.444997, "o", "4 5 6 7 8 9 10 11 12 13 14 15 \r\n"]
[4.445012, "o", "0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \r\n8;48\r\n"]
[4.445076, "o", "\r\n"]
[4.445092, "o", " ./ascgen 32 | ./hybrid \r\n"]
[4.445771, "o", "0 1 2 3 4 "]
[4.445787, "o", "5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 "]
[4.445802, "o", "24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n"]
[4.445817, "o", "0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \r\n32;160\r\n"]
[4.44591, "o", "\r\n"]
[4.446079, "o", "\u001b]0;krrer@krrer-Z590-D: ~/4-sem/aisd/261742/lista_2\u0007\u001b[01;32mkrrer@krrer-Z590-D\u001b[00m:\u001b[01;34m~/4-sem/aisd/261742/lista_2\u001b[00m$ "]
[6.2842, "o", "exit\r\n"]
